<?xml version='1.0' encoding='utf-8'?>
<!--
Copyright (c) 2022, QIIME 2 development team.

Distributed under the terms of the Modified BSD License. (SPDX: BSD-3-Clause)
-->
<!--
This tool was automatically generated by:
    q2galaxy (version: 2022.8.1)
for:
    qiime2 (version: 2022.8.1)
-->
<tool name="qiime2 quality-control evaluate-taxonomy" id="qiime2__quality_control__evaluate_taxonomy" version="2022.8.0+q2galaxy.2022.8.1.1" profile="22.05" license="BSD-3-Clause">
    <description>Evaluate expected vs. observed taxonomic assignments</description>
    <requirements>
        <container type="docker">quay.io/qiime2/core:2022.8</container>
    </requirements>
    <version_command>q2galaxy version quality_control</version_command>
    <command detect_errors="aggressive">q2galaxy run quality_control evaluate_taxonomy '$inputs'</command>
    <configfiles>
        <inputs name="inputs" data_style="paths"/>
    </configfiles>
    <inputs>
        <param name="expected_taxa" type="data" format="qza" label="expected_taxa: FeatureData[Taxonomy]" help="[required]  Expected taxonomic assignments">
            <options options_filter_attribute="metadata.semantic_type">
                <filter type="add_value" value="FeatureData[Taxonomy]"/>
            </options>
            <validator type="expression" message="Incompatible type">hasattr(value.metadata, "semantic_type") and value.metadata.semantic_type in ['FeatureData[Taxonomy]']</validator>
        </param>
        <param name="observed_taxa" type="data" format="qza" label="observed_taxa: FeatureData[Taxonomy]" help="[required]  Observed taxonomic assignments">
            <options options_filter_attribute="metadata.semantic_type">
                <filter type="add_value" value="FeatureData[Taxonomy]"/>
            </options>
            <validator type="expression" message="Incompatible type">hasattr(value.metadata, "semantic_type") and value.metadata.semantic_type in ['FeatureData[Taxonomy]']</validator>
        </param>
        <param name="depth" type="integer" value="" label="depth: Int" help="[required]  Maximum depth of semicolon-delimited taxonomic ranks to test (e.g., 1 = root, 7 = species for the greengenes reference sequence database)."/>
        <section name="__q2galaxy__GUI__section__extra_opts__" title="Click here for additional options">
            <param name="feature_table" type="data" format="qza" optional="true" label="feature_table: FeatureTable[RelativeFrequency]" help="[optional]  Optional feature table containing relative frequency of each feature, used to weight accuracy scores by frequency. Must contain all features found in expected and/or observed taxa. Features found in the table but not the expected/observed taxa will be dropped prior to analysis.">
                <options options_filter_attribute="metadata.semantic_type">
                    <filter type="add_value" value="FeatureTable[RelativeFrequency]"/>
                </options>
                <validator type="expression" message="Incompatible type">hasattr(value.metadata, "semantic_type") and value.metadata.semantic_type in ['FeatureTable[RelativeFrequency]']</validator>
            </param>
            <param name="palette" type="select" label="palette: Str % Choices('Set1', 'Set2', 'Set3', 'Pastel1', 'Pastel2', 'Paired', 'Accent', 'Dark2', 'tab10', 'tab20', 'tab20b', 'tab20c', 'viridis', 'plasma', 'inferno', 'magma', 'terrain', 'rainbow')">
                <option value="Set1" selected="true">Set1</option>
                <option value="Set2">Set2</option>
                <option value="Set3">Set3</option>
                <option value="Pastel1">Pastel1</option>
                <option value="Pastel2">Pastel2</option>
                <option value="Paired">Paired</option>
                <option value="Accent">Accent</option>
                <option value="Dark2">Dark2</option>
                <option value="tab10">tab10</option>
                <option value="tab20">tab20</option>
                <option value="tab20b">tab20b</option>
                <option value="tab20c">tab20c</option>
                <option value="viridis">viridis</option>
                <option value="plasma">plasma</option>
                <option value="inferno">inferno</option>
                <option value="magma">magma</option>
                <option value="terrain">terrain</option>
                <option value="rainbow">rainbow</option>
            </param>
            <param name="require_exp_ids" type="boolean" truevalue="__q2galaxy__::literal::True" falsevalue="__q2galaxy__::literal::False" checked="true" label="require_exp_ids: Bool" help="[default: Yes]  Require that all features found in observed taxa must be found in expected taxa or raise error."/>
            <param name="require_obs_ids" type="boolean" truevalue="__q2galaxy__::literal::True" falsevalue="__q2galaxy__::literal::False" checked="true" label="require_obs_ids: Bool" help="[default: Yes]  Require that all features found in expected taxa must be found in observed taxa or raise error."/>
            <conditional name="__q2galaxy__GUI__conditional__sample_id__" label="sample_id: Str">
                <param name="__q2galaxy__GUI__select__" type="select" label="sample_id: Str" help="[optional]  Optional sample ID to use for extracting frequency data from feature table, and for labeling accuracy results. If no sample_id is provided, feature frequencies are derived from the sum of all samples present in the feature table.">
                    <option value="__q2galaxy__::control::default" selected="true">None (Use default behavior)</option>
                    <option value="__q2galaxy__::control::provide">Provide a value</option>
                </param>
                <when value="__q2galaxy__::control::default">
                    <param name="sample_id" type="hidden" value="__q2galaxy__::literal::None"/>
                </when>
                <when value="__q2galaxy__::control::provide">
                    <param name="sample_id" type="text">
                        <sanitizer>
                            <valid initial="string.printable"/>
                        </sanitizer>
                    </param>
                </when>
            </conditional>
        </section>
    </inputs>
    <outputs>
        <data name="visualization" format="qzv" label="${tool.id} on ${on_string}: visualization.qzv" from_work_dir="visualization.qzv"/>
    </outputs>
    <tests/>
    <help>
QIIME 2: quality-control evaluate-taxonomy
==========================================
Evaluate expected vs. observed taxonomic assignments


Outputs:
--------
:visualization.qzv: &lt;no description&gt;

|  

Description:
------------
This visualizer compares a pair of observed and expected taxonomic assignments to calculate precision, recall, and F-measure at each taxonomic level, up to maximum level specified by the depth parameter. These metrics are calculated at each semicolon-delimited rank. This action is useful for comparing the accuracy of taxonomic assignment, e.g., between different taxonomy classifiers or other bioinformatics methods. Expected taxonomies should be derived from simulated or mock community sequences that have known taxonomic affiliations.


|  

</help>
    <citations>
        <citation type="bibtex">@article{cite1,
 author = {Bokulich, Nicholas A and Kaehler, Benjamin D and Rideout, Jai Ram and Dillon, Matthew and Bolyen, Evan and Knight, Rob and Huttley, Gavin A and Caporaso, J Gregory},
 journal = {Microbiome},
 title = {Optimizing taxonomic classification of marker-gene amplicon sequences with QIIME 2's q2-feature-classifier plugin},
 volume = {In Press},
 year = {2018}
}
</citation>
        <citation type="doi">10.1038/s41587-019-0209-9</citation>
    </citations>
</tool>
