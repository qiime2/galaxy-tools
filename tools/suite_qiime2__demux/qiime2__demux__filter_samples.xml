<?xml version='1.0' encoding='utf-8'?>
<!--
Copyright (c) 2024, QIIME 2 development team.

Distributed under the terms of the Modified BSD License. (SPDX: BSD-3-Clause)
-->
<!--
This tool was automatically generated by:
    q2galaxy (version: 2024.10.0)
for:
    qiime2 (version: 2024.10.1)
-->
<tool name="qiime2 demux filter-samples" id="qiime2__demux__filter_samples" version="2024.10.0+q2galaxy.2024.10.0" profile="22.05" license="BSD-3-Clause">
    <description>Filter samples out of demultiplexed data.</description>
    <xrefs>
        <xref type="bio.tools">qiime2</xref>
    </xrefs>
    <requirements>
        <container type="docker">quay.io/qiime2/amplicon:2024.10</container>
    </requirements>
    <version_command>q2galaxy version demux</version_command>
    <command detect_errors="exit_code">q2galaxy run demux filter_samples '$inputs'</command>
    <configfiles>
        <inputs name="inputs" data_style="staging_path_and_source_path"/>
    </configfiles>
    <inputs>
        <param name="demux" type="data" format="qza" label="demux: SampleData[SequencesWithQuality¹ | PairedEndSequencesWithQuality² | JoinedSequencesWithQuality³]" help="[required]  The demultiplexed data from which samples should be filtered.">
            <options options_filter_attribute="metadata.semantic_type">
                <filter type="add_value" value="SampleData[JoinedSequencesWithQuality]"/>
                <filter type="add_value" value="SampleData[PairedEndSequencesWithQuality]"/>
                <filter type="add_value" value="SampleData[SequencesWithQuality]"/>
            </options>
            <validator type="expression" message="Incompatible type">hasattr(value.metadata, "semantic_type") and value.metadata.semantic_type in ['SampleData[JoinedSequencesWithQuality]', 'SampleData[PairedEndSequencesWithQuality]', 'SampleData[SequencesWithQuality]']</validator>
        </param>
        <repeat name="metadata" min="1" help="[required]  Sample metadata indicating which sample ids to filter. The optional `where` parameter may be used to filter ids based on specified conditions in the metadata. The optional `exclude_ids` parameter may be used to exclude the ids specified in the metadata from the filter." title="metadata: Metadata">
            <conditional name="__q2galaxy__GUI__conditional__metadata__">
                <param name="type" type="select" label="metadata: Metadata">
                    <option value="tsv" selected="true">Metadata from TSV</option>
                    <option value="qza">Metadata from Artifact</option>
                </param>
                <when value="tsv">
                    <param name="source" type="data" format="tabular,qiime2.tabular" label="Metadata Source"/>
                </when>
                <when value="qza">
                    <param name="source" type="data" format="qza" label="Metadata Source"/>
                </when>
            </conditional>
        </repeat>
        <section name="__q2galaxy__GUI__section__extra_opts__" title="Click here for additional options">
            <conditional name="__q2galaxy__GUI__conditional__where__" label="where: Str">
                <param name="__q2galaxy__GUI__select__" type="select" label="where: Str" help="[optional]  Optional SQLite WHERE clause specifying sample metadata criteria that must be met to be included in the filtered data. If not provided, all samples in `metadata` that are also in the demultiplexed data will be retained.">
                    <option value="__q2galaxy__::control::default" selected="true">None (Use default behavior)</option>
                    <option value="__q2galaxy__::control::provide">Provide a value</option>
                </param>
                <when value="__q2galaxy__::control::default">
                    <param name="where" type="hidden" value="__q2galaxy__::literal::None"/>
                </when>
                <when value="__q2galaxy__::control::provide">
                    <param name="where" type="text">
                        <sanitizer>
                            <valid initial="string.printable"/>
                        </sanitizer>
                    </param>
                </when>
            </conditional>
            <param name="exclude_ids" type="boolean" truevalue="__q2galaxy__::literal::True" falsevalue="__q2galaxy__::literal::False" label="exclude_ids: Bool" help="[default: No]  Defaults to False. If True, the samples selected by the `metadata` and optional `where` parameter will be excluded from the filtered data."/>
        </section>
    </inputs>
    <outputs>
        <data name="filtered_demux" format="qza" label="${tool.name} on ${on_string}: filtered_demux.qza" from_work_dir="filtered_demux.qza"/>
    </outputs>
    <tests/>
    <help>
QIIME 2: demux filter-samples
=============================
Filter samples out of demultiplexed data.


Outputs:
--------
:filtered_demux.qza: Filtered demultiplexed data.

|  

Description:
------------
Filter samples indicated in given metadata out of demultiplexed data. Specific samples can be further selected with the WHERE clause, and the `exclude_ids` parameter allows for filtering of all samples not specified.


|  

</help>
    <citations>
        <citation type="doi">10.1038/s41587-019-0209-9</citation>
    </citations>
</tool>
