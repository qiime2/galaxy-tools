<?xml version='1.0' encoding='utf-8'?>
<!--
Copyright (c) 2022, QIIME 2 development team.

Distributed under the terms of the Modified BSD License. (SPDX: BSD-3-Clause)
-->
<!--
This tool was automatically generated by:
    q2galaxy (version: 2022.2.0)
for:
    qiime2 (version: 2022.2.1)
-->
<tool name="qiime2 sample-classifier metatable" id="qiime2_sample-classifier_metatable" version="2022.2.0+q2galaxy.2022.2.0" profile="20.09" license="BSD-3-Clause">
    <description>Convert (and merge) positive numeric metadata (in)to feature table.</description>
    <requirements>
        <container type="docker">quay.io/qiime2/core:2022.2</container>
    </requirements>
    <version_command>q2galaxy version sample_classifier</version_command>
    <command detect_errors="aggressive">q2galaxy run sample_classifier metatable '$inputs'</command>
    <configfiles>
        <inputs name="inputs" data_style="paths"/>
    </configfiles>
    <inputs>
        <repeat name="metadata" min="1" help="[required]  Metadata file to convert to feature table." title="metadata: Metadata">
            <conditional name="__q2galaxy__GUI__conditional__metadata__">
                <param name="type" type="select" label="metadata: Metadata">
                    <option value="tsv" selected="true">Metadata from TSV</option>
                    <option value="qza">Metadata from Artifact</option>
                </param>
                <when value="tsv">
                    <param name="source" type="data" format="tabular,qiime2.tabular" label="Metadata Source"/>
                </when>
                <when value="qza">
                    <param name="source" type="data" format="qza" label="Metadata Source"/>
                </when>
            </conditional>
        </repeat>
        <section name="__q2galaxy__GUI__section__extra_opts__" title="Click here for additional options">
            <param name="table" type="data" format="qza" optional="true" label="table: FeatureTable[Frequency]" help="[optional]  Feature table containing all features that should be used for target prediction.">
                <options options_filter_attribute="metadata.semantic_type">
                    <filter type="add_value" value="FeatureTable[Frequency]"/>
                </options>
                <validator type="expression" message="Incompatible type">hasattr(value.metadata, "semantic_type") and value.metadata.semantic_type in {'FeatureTable[Frequency]'}</validator>
            </param>
            <param name="missing_samples" type="select" label="missing_samples: Str % Choices('error', 'ignore')" help="[default: 'ignore']  How to handle missing samples in metadata. &quot;error&quot; will fail if missing samples are detected. &quot;ignore&quot; will cause the feature table and metadata to be filtered, so that only samples found in both files are retained." display="radio">
                <option value="error">error</option>
                <option value="ignore" selected="true">ignore</option>
            </param>
            <param name="missing_values" type="select" label="missing_values: Str % Choices('drop_samples', 'drop_features', 'error', 'fill')" help="[default: 'error']  How to handle missing values (nans) in metadata. Either &quot;drop_samples&quot; with missing values, &quot;drop_features&quot; with missing values, &quot;fill&quot; missing values with zeros, or &quot;error&quot; if any missing values are found." display="radio">
                <option value="drop_samples">drop_samples</option>
                <option value="drop_features">drop_features</option>
                <option value="error" selected="true">error</option>
                <option value="fill">fill</option>
            </param>
            <param name="drop_all_unique" type="boolean" truevalue="__q2galaxy__::literal::True" falsevalue="__q2galaxy__::literal::False" label="drop_all_unique: Bool" help="[default: No]  If True, columns that contain a unique value for every ID will be dropped."/>
        </section>
    </inputs>
    <outputs>
        <data name="converted_table" format="qza" label="${tool.id} on ${on_string}: converted_table.qza" from_work_dir="converted_table.qza"/>
    </outputs>
    <tests/>
    <help>
QIIME 2: sample-classifier metatable
====================================
Convert (and merge) positive numeric metadata (in)to feature table.


Outputs:
--------
:converted_table.qza: Converted feature table

|  

Description:
------------
Convert numeric sample metadata from TSV file into a feature table. Optionally merge with an existing feature table. Only numeric metadata will be converted; categorical columns will be silently dropped. By default, if a table is used as input only samples found in both the table and metadata (intersection) are merged, and others are silently dropped. Set missing_samples="error" to raise an error if samples found in the table are missing from the metadata file. The metadata file can always contain a superset of samples. Note that columns will be dropped if they are non-numeric, contain no unique values (zero variance), contain only empty cells, or contain negative values. This method currently only converts postive numeric metadata into feature data. Tip: convert categorical columns to dummy variables to include them in the output feature table.


|  

</help>
    <citations>
        <citation type="bibtex">@article{cite1,
 author = {Bokulich, Nicholas and Dillon, Matthew and Bolyen, Evan and Kaehler, Benjamin D and Huttley, Gavin A and Caporaso, J Gregory},
 doi = {10.21105/joss.00934},
 journal = {Journal of Open Source Software},
 number = {30},
 pages = {934},
 title = {q2-sample-classifier: machine-learning tools for microbiome classification and regression},
 volume = {3},
 year = {2018}
}

</citation>
        <citation type="bibtex">@article{cite2,
 author = {Pedregosa, Fabian and Varoquaux, Gaël and Gramfort, Alexandre and Michel, Vincent and Thirion, Bertrand and Grisel, Olivier and Blondel, Mathieu and Prettenhofer, Peter and Weiss, Ron and Dubourg, Vincent and Vanderplas, Jake and Passos, Alexandre and Cournapeau, David and Brucher, Matthieu and Perrot, Matthieu and Duchesnay, Édouard},
 journal = {Journal of machine learning research},
 number = {Oct},
 pages = {2825--2830},
 title = {Scikit-learn: Machine learning in Python},
 volume = {12},
 year = {2011}
}

</citation>
        <citation type="bibtex">@article{cite3,
 author = {Bolyen, Evan and Rideout, Jai Ram and Dillon, Matthew R. and Bokulich, Nicholas A. and Abnet, Christian C. and Al-Ghalith, Gabriel A. and Alexander, Harriet and Alm, Eric J. and Arumugam, Manimozhiyan and Asnicar, Francesco and Bai, Yang and Bisanz, Jordan E. and Bittinger, Kyle and Brejnrod, Asker and Brislawn, Colin J. and Brown, C. Titus and Callahan, Benjamin J. and Caraballo-Rodríguez, Andrés Mauricio and Chase, John and Cope, Emily K. and Da Silva, Ricardo and Diener, Christian and Dorrestein, Pieter C. and Douglas, Gavin M. and Durall, Daniel M. and Duvallet, Claire and Edwardson, Christian F. and Ernst, Madeleine and Estaki, Mehrbod and Fouquier, Jennifer and Gauglitz, Julia M. and Gibbons, Sean M. and Gibson, Deanna L. and Gonzalez, Antonio and Gorlick, Kestrel and Guo, Jiarong and Hillmann, Benjamin and Holmes, Susan and Holste, Hannes and Huttenhower, Curtis and Huttley, Gavin A. and Janssen, Stefan and Jarmusch, Alan K. and Jiang, Lingjing and Kaehler, Benjamin D. and Kang, Kyo Bin and Keefe, Christopher R. and Keim, Paul and Kelley, Scott T. and Knights, Dan and Koester, Irina and Kosciolek, Tomasz and Kreps, Jorden and Langille, Morgan G. I. and Lee, Joslynn and Ley, Ruth and Liu, Yong-Xin and Loftfield, Erikka and Lozupone, Catherine and Maher, Massoud and Marotz, Clarisse and Martin, Bryan D. and McDonald, Daniel and McIver, Lauren J. and Melnik, Alexey V. and Metcalf, Jessica L. and Morgan, Sydney C. and Morton, Jamie T. and Naimey, Ahmad Turan and Navas-Molina, Jose A. and Nothias, Louis Felix and Orchanian, Stephanie B. and Pearson, Talima and Peoples, Samuel L. and Petras, Daniel and Preuss, Mary Lai and Pruesse, Elmar and Rasmussen, Lasse Buur and Rivers, Adam and Robeson, Michael S. and Rosenthal, Patrick and Segata, Nicola and Shaffer, Michael and Shiffer, Arron and Sinha, Rashmi and Song, Se Jin and Spear, John R. and Swafford, Austin D. and Thompson, Luke R. and Torres, Pedro J. and Trinh, Pauline and Tripathi, Anupriya and Turnbaugh, Peter J. and Ul-Hasan, Sabah and van der Hooft, Justin J. J. and Vargas, Fernando and Vázquez-Baeza, Yoshiki and Vogtmann, Emily and von Hippel, Max and Walters, William and Wan, Yunhu and Wang, Mingxun and Warren, Jonathan and Weber, Kyle C. and Williamson, Charles H. D. and Willis, Amy D. and Xu, Zhenjiang Zech and Zaneveld, Jesse R. and Zhang, Yilong and Zhu, Qiyun and Knight, Rob and Caporaso, J. Gregory},
 doi = {10.1038/s41587-019-0209-9},
 issn = {1546-1696},
 journal = {Nature Biotechnology},
 number = {8},
 pages = {852-857},
 title = {Reproducible, interactive, scalable and extensible microbiome data science using QIIME 2},
 url = {https://doi.org/10.1038/s41587-019-0209-9},
 volume = {37},
 year = {2019}
}

</citation>
    </citations>
</tool>
