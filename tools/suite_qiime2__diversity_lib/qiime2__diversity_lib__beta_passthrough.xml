<?xml version='1.0' encoding='utf-8'?>
<!--
Copyright (c) 2024, QIIME 2 development team.

Distributed under the terms of the Modified BSD License. (SPDX: BSD-3-Clause)
-->
<!--
This tool was automatically generated by:
    q2galaxy (version: 2024.10.0)
for:
    qiime2 (version: 2024.10.1)
-->
<tool name="qiime2 diversity-lib beta-passthrough" id="qiime2__diversity_lib__beta_passthrough" version="2024.10.0+q2galaxy.2024.10.0" profile="22.05" license="BSD-3-Clause">
    <description>Beta Passthrough (non-phylogenetic)</description>
    <xrefs>
        <xref type="bio.tools">qiime2</xref>
    </xrefs>
    <requirements>
        <container type="docker">quay.io/qiime2/amplicon:2024.10</container>
    </requirements>
    <version_command>q2galaxy version diversity_lib</version_command>
    <command detect_errors="exit_code">q2galaxy run diversity_lib beta_passthrough '$inputs'</command>
    <configfiles>
        <inputs name="inputs" data_style="staging_path_and_source_path"/>
    </configfiles>
    <inputs>
        <param name="table" type="data" format="qza" label="table: FeatureTable[Frequency]" help="[required]  The feature table containing the samples over which beta diversity should be computed.">
            <options options_filter_attribute="metadata.semantic_type">
                <filter type="add_value" value="FeatureTable[Frequency]"/>
            </options>
            <validator type="expression" message="Incompatible type">hasattr(value.metadata, "semantic_type") and value.metadata.semantic_type in ['FeatureTable[Frequency]']</validator>
        </param>
        <param name="metric" type="select" label="metric: Str % Choices('aitchison', 'canberra', 'canberra_adkins', 'chebyshev', 'cityblock', 'correlation', 'cosine', 'dice', 'euclidean', 'hamming', 'jensenshannon', 'matching', 'minkowski', 'rogerstanimoto', 'russellrao', 'seuclidean', 'sokalmichener', 'sokalsneath', 'sqeuclidean', 'yule')">
            <option value="__q2galaxy__::literal::None">Selection required</option>
            <option value="aitchison">aitchison</option>
            <option value="canberra">canberra</option>
            <option value="canberra_adkins">canberra_adkins</option>
            <option value="chebyshev">chebyshev</option>
            <option value="cityblock">cityblock</option>
            <option value="correlation">correlation</option>
            <option value="cosine">cosine</option>
            <option value="dice">dice</option>
            <option value="euclidean">euclidean</option>
            <option value="hamming">hamming</option>
            <option value="jensenshannon">jensenshannon</option>
            <option value="matching">matching</option>
            <option value="minkowski">minkowski</option>
            <option value="rogerstanimoto">rogerstanimoto</option>
            <option value="russellrao">russellrao</option>
            <option value="seuclidean">seuclidean</option>
            <option value="sokalmichener">sokalmichener</option>
            <option value="sokalsneath">sokalsneath</option>
            <option value="sqeuclidean">sqeuclidean</option>
            <option value="yule">yule</option>
            <validator type="expression" message="Please verify this parameter.">value != '__q2galaxy__::literal::None'</validator>
        </param>
        <section name="__q2galaxy__GUI__section__extra_opts__" title="Click here for additional options">
            <param name="pseudocount" type="integer" min="1" value="1" label="pseudocount: Int % Range(1, None)" help="[default: 1]  A pseudocount to handle zeros for compositional metrics. This is ignored for non-compositional metrics."/>
        </section>
    </inputs>
    <outputs>
        <data name="distance_matrix" format="qza" label="${tool.name} on ${on_string}: distance_matrix.qza" from_work_dir="distance_matrix.qza"/>
    </outputs>
    <tests>
        <test>
            <param name="table" value="beta_passthrough.test0.feature-table.qza" ftype="qza"/>
            <param name="metric" value="euclidean"/>
            <output name="distance_matrix" ftype="qza">
                <assert_contents>
                    <has_archive_member path="[0-9a-f]{8}-[0-9a-f]{4}-[4][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}\/metadata.yaml">
                        <has_line_matching expression="type: DistanceMatrix"/>
                    </has_archive_member>
                </assert_contents>
            </output>
        </test>
        <test>
            <param name="table" value="beta_passthrough.test1.feature-table.qza" ftype="qza"/>
            <param name="metric" value="euclidean"/>
            <output name="distance_matrix" ftype="qza">
                <assert_contents>
                    <has_archive_member path="[0-9a-f]{8}-[0-9a-f]{4}-[4][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}\/metadata.yaml">
                        <has_line_matching expression="type: DistanceMatrix"/>
                    </has_archive_member>
                </assert_contents>
            </output>
        </test>
        <test>
            <param name="table" value="beta_passthrough.test2.feature-table.qza" ftype="qza"/>
            <param name="metric" value="aitchison"/>
            <output name="distance_matrix" ftype="qza">
                <assert_contents>
                    <has_archive_member path="[0-9a-f]{8}-[0-9a-f]{4}-[4][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}\/metadata.yaml">
                        <has_line_matching expression="type: DistanceMatrix"/>
                    </has_archive_member>
                </assert_contents>
            </output>
        </test>
        <test>
            <param name="table" value="beta_passthrough.test3.feature-table.qza" ftype="qza"/>
            <param name="metric" value="aitchison"/>
            <param name="pseudocount" value="5"/>
            <output name="distance_matrix" ftype="qza">
                <assert_contents>
                    <has_archive_member path="[0-9a-f]{8}-[0-9a-f]{4}-[4][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}\/metadata.yaml">
                        <has_line_matching expression="type: DistanceMatrix"/>
                    </has_archive_member>
                </assert_contents>
            </output>
        </test>
    </tests>
    <help>
QIIME 2: diversity-lib beta-passthrough
=======================================
Beta Passthrough (non-phylogenetic)


Outputs:
--------
:distance_matrix.qza: The resulting distance matrix.

|  

Description:
------------
Computes a distance matrix for all pairs of samples in a feature table using the scikit-bio implementation of the selected beta diversity metric.

Examples:
---------

run on one core (by default)
****************************
Using the ``qiime2 diversity-lib beta-passthrough`` tool:
 #. Set *"table"* to ``#: feature-table.qza``
 #. Set *"metric"* to ``euclidean``
 #. Press the ``Execute`` button.

Once completed, for the new entry in your history, use the ``Edit`` button to set the name as follows:
 (Renaming is optional, but it will make any subsequent steps easier to complete.)

 .. list-table::
    :align: left
    :header-rows: 1

    * - History Name
      - *"Name"* to set (be sure to press ``Save``)
    * - ``#: qiime2 diversity-lib beta-passthrough [...] : distance_matrix.qza``
      - ``euclidean-dm.qza``

to run on n cores, replace 1 here with your preferred integer
*************************************************************
Using the ``qiime2 diversity-lib beta-passthrough`` tool:
 #. Set *"table"* to ``#: feature-table.qza``
 #. Set *"metric"* to ``euclidean``
 #. Press the ``Execute`` button.

Once completed, for the new entry in your history, use the ``Edit`` button to set the name as follows:
 (Renaming is optional, but it will make any subsequent steps easier to complete.)

 .. list-table::
    :align: left
    :header-rows: 1

    * - History Name
      - *"Name"* to set (be sure to press ``Save``)
    * - ``#: qiime2 diversity-lib beta-passthrough [...] : distance_matrix.qza``
      - ``euclidean-dm.qza``

use 'auto' to run on all of host system's available CPU cores
*************************************************************
| A default pseudocount of 1 is added to feature counts. Pseudocount is ignored for non-compositional metrics.
Using the ``qiime2 diversity-lib beta-passthrough`` tool:
 #. Set *"table"* to ``#: feature-table.qza``
 #. Set *"metric"* to ``aitchison``
 #. Press the ``Execute`` button.

Once completed, for the new entry in your history, use the ``Edit`` button to set the name as follows:
 (Renaming is optional, but it will make any subsequent steps easier to complete.)

 .. list-table::
    :align: left
    :header-rows: 1

    * - History Name
      - *"Name"* to set (be sure to press ``Save``)
    * - ``#: qiime2 diversity-lib beta-passthrough [...] : distance_matrix.qza``
      - ``aitchison-dm.qza``

use 'pseudocount' to manually set a pseudocount for compositional metrics
*************************************************************************
Using the ``qiime2 diversity-lib beta-passthrough`` tool:
 #. Set *"table"* to ``#: feature-table.qza``
 #. Set *"metric"* to ``aitchison``
 #. Expand the ``additional options`` section

    - Set *"pseudocount"* to ``5``

 #. Press the ``Execute`` button.

Once completed, for the new entry in your history, use the ``Edit`` button to set the name as follows:
 (Renaming is optional, but it will make any subsequent steps easier to complete.)

 .. list-table::
    :align: left
    :header-rows: 1

    * - History Name
      - *"Name"* to set (be sure to press ``Save``)
    * - ``#: qiime2 diversity-lib beta-passthrough [...] : distance_matrix.qza``
      - ``aitchison-dm.qza``


|  

</help>
    <citations>
        <citation type="doi">10.1038/s41587-019-0209-9</citation>
    </citations>
</tool>
