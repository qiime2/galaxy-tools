<?xml version='1.0' encoding='utf-8'?>
<!--
Copyright (c) 2022, QIIME 2 development team.

Distributed under the terms of the Modified BSD License. (SPDX: BSD-3-Clause)
-->
<!--
This tool was automatically generated by:
    q2galaxy (version: 2022.8.1)
for:
    qiime2 (version: 2022.8.1)
-->
<tool name="qiime2 diversity alpha-rarefaction" id="qiime2__diversity__alpha_rarefaction" version="2022.8.0+q2galaxy.2022.8.1.1" profile="22.05" license="BSD-3-Clause">
    <description>Alpha rarefaction curves</description>
    <requirements>
        <container type="docker">quay.io/qiime2/core:2022.8</container>
    </requirements>
    <version_command>q2galaxy version diversity</version_command>
    <command detect_errors="aggressive">q2galaxy run diversity alpha_rarefaction '$inputs'</command>
    <configfiles>
        <inputs name="inputs" data_style="paths"/>
    </configfiles>
    <inputs>
        <param name="table" type="data" format="qza" label="table: FeatureTable[Frequency]" help="[required]  Feature table to compute rarefaction curves from.">
            <options options_filter_attribute="metadata.semantic_type">
                <filter type="add_value" value="FeatureTable[Frequency]"/>
            </options>
            <validator type="expression" message="Incompatible type">hasattr(value.metadata, "semantic_type") and value.metadata.semantic_type in ['FeatureTable[Frequency]']</validator>
        </param>
        <param name="max_depth" type="integer" min="1" value="" label="max_depth: Int % Range(1, None)" help="[required]  The maximum rarefaction depth. Must be greater than min_depth."/>
        <section name="__q2galaxy__GUI__section__extra_opts__" title="Click here for additional options">
            <param name="phylogeny" type="data" format="qza" optional="true" label="phylogeny: Phylogeny[Rooted]" help="[optional]  Optional phylogeny for phylogenetic metrics.">
                <options options_filter_attribute="metadata.semantic_type">
                    <filter type="add_value" value="Phylogeny[Rooted]"/>
                </options>
                <validator type="expression" message="Incompatible type">hasattr(value.metadata, "semantic_type") and value.metadata.semantic_type in ['Phylogeny[Rooted]']</validator>
            </param>
            <repeat name="metrics" help="[optional]  The metrics to be measured. By default computes observed_features, shannon, and if phylogeny is provided, faith_pd." title="metrics: Set[Str % Choices('ace', 'berger_parker_d', 'brillouin_d', 'chao1', 'dominance', 'doubles', 'enspie', 'faith_pd', 'fisher_alpha', 'gini_index', 'goods_coverage', 'heip_e', 'lladser_pe', 'margalef', 'mcintosh_d', 'mcintosh_e', 'menhinick', 'michaelis_menten_fit', 'observed_features', 'pielou_e', 'robbins', 'shannon', 'simpson', 'simpson_e', 'singles')]">
                <param name="element" type="select" label="element: Str % Choices('ace', 'berger_parker_d', 'brillouin_d', 'chao1', 'dominance', 'doubles', 'enspie', 'faith_pd', 'fisher_alpha', 'gini_index', 'goods_coverage', 'heip_e', 'lladser_pe', 'margalef', 'mcintosh_d', 'mcintosh_e', 'menhinick', 'michaelis_menten_fit', 'observed_features', 'pielou_e', 'robbins', 'shannon', 'simpson', 'simpson_e', 'singles')">
                    <option value="__q2galaxy__::literal::None">Selection required</option>
                    <option value="ace">ace</option>
                    <option value="berger_parker_d">berger_parker_d</option>
                    <option value="brillouin_d">brillouin_d</option>
                    <option value="chao1">chao1</option>
                    <option value="dominance">dominance</option>
                    <option value="doubles">doubles</option>
                    <option value="enspie">enspie</option>
                    <option value="faith_pd">faith_pd</option>
                    <option value="fisher_alpha">fisher_alpha</option>
                    <option value="gini_index">gini_index</option>
                    <option value="goods_coverage">goods_coverage</option>
                    <option value="heip_e">heip_e</option>
                    <option value="lladser_pe">lladser_pe</option>
                    <option value="margalef">margalef</option>
                    <option value="mcintosh_d">mcintosh_d</option>
                    <option value="mcintosh_e">mcintosh_e</option>
                    <option value="menhinick">menhinick</option>
                    <option value="michaelis_menten_fit">michaelis_menten_fit</option>
                    <option value="observed_features">observed_features</option>
                    <option value="pielou_e">pielou_e</option>
                    <option value="robbins">robbins</option>
                    <option value="shannon">shannon</option>
                    <option value="simpson">simpson</option>
                    <option value="simpson_e">simpson_e</option>
                    <option value="singles">singles</option>
                    <validator type="expression" message="Please verify this parameter.">value != '__q2galaxy__::literal::None'</validator>
                </param>
            </repeat>
            <repeat name="metadata" help="[optional]  The sample metadata." title="metadata: Metadata">
                <conditional name="__q2galaxy__GUI__conditional__metadata__">
                    <param name="type" type="select" label="metadata: Metadata">
                        <option value="tsv" selected="true">Metadata from TSV</option>
                        <option value="qza">Metadata from Artifact</option>
                    </param>
                    <when value="tsv">
                        <param name="source" type="data" format="tabular,qiime2.tabular" label="Metadata Source"/>
                    </when>
                    <when value="qza">
                        <param name="source" type="data" format="qza" label="Metadata Source"/>
                    </when>
                </conditional>
            </repeat>
            <param name="min_depth" type="integer" min="1" value="1" label="min_depth: Int % Range(1, None)" help="[default: 1]  The minimum rarefaction depth."/>
            <param name="steps" type="integer" min="2" value="10" label="steps: Int % Range(2, None)" help="[default: 10]  The number of rarefaction depths to include between min_depth and max_depth."/>
            <param name="iterations" type="integer" min="1" value="10" label="iterations: Int % Range(1, None)" help="[default: 10]  The number of rarefied feature tables to compute at each step."/>
        </section>
    </inputs>
    <outputs>
        <data name="visualization" format="qzv" label="${tool.id} on ${on_string}: visualization.qzv" from_work_dir="visualization.qzv"/>
    </outputs>
    <tests/>
    <help>
QIIME 2: diversity alpha-rarefaction
====================================
Alpha rarefaction curves


Outputs:
--------
:visualization.qzv: &lt;no description&gt;

|  

Description:
------------
Generate interactive alpha rarefaction curves by computing rarefactions between `min_depth` and `max_depth`. The number of intermediate depths to compute is controlled by the `steps` parameter, with n `iterations` being computed at each rarefaction depth. If sample metadata is provided, samples may be grouped based on distinct values within a metadata column.


|  

</help>
    <citations>
        <citation type="doi">10.1038/s41587-019-0209-9</citation>
    </citations>
</tool>
