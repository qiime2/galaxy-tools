<?xml version='1.0' encoding='utf-8'?>
<!--
Copyright (c) 2022, QIIME 2 development team.

Distributed under the terms of the Modified BSD License. (SPDX: BSD-3-Clause)
-->
<!--
This tool was automatically generated by:
    q2galaxy (version: 2022.8.1)
for:
    qiime2 (version: 2022.8.1)
-->
<tool name="qiime2 vsearch dereplicate-sequences" id="qiime2__vsearch__dereplicate_sequences" version="2022.8.0+q2galaxy.2022.8.1.2" profile="22.05" license="BSD-3-Clause">
    <description>Dereplicate sequences.</description>
    <requirements>
        <container type="docker">quay.io/qiime2/core:2022.8</container>
    </requirements>
    <version_command>q2galaxy version vsearch</version_command>
    <command detect_errors="aggressive">q2galaxy run vsearch dereplicate_sequences '$inputs'</command>
    <configfiles>
        <inputs name="inputs" data_style="paths"/>
    </configfiles>
    <inputs>
        <param name="sequences" type="data" format="qza" label="sequences: SampleData[Sequences] | SampleData[SequencesWithQuality] | SampleData[JoinedSequencesWithQuality]" help="[required]  The sequences to be dereplicated.">
            <options options_filter_attribute="metadata.semantic_type">
                <filter type="add_value" value="SampleData[Sequences]"/>
                <filter type="add_value" value="SampleData[SequencesWithQuality]"/>
                <filter type="add_value" value="SampleData[JoinedSequencesWithQuality]"/>
            </options>
            <validator type="expression" message="Incompatible type">hasattr(value.metadata, "semantic_type") and value.metadata.semantic_type in ['SampleData[JoinedSequencesWithQuality]', 'SampleData[SequencesWithQuality]', 'SampleData[Sequences]']</validator>
        </param>
        <section name="__q2galaxy__GUI__section__extra_opts__" title="Click here for additional options">
            <param name="derep_prefix" type="boolean" truevalue="__q2galaxy__::literal::True" falsevalue="__q2galaxy__::literal::False" label="derep_prefix: Bool" help="[default: No]  Merge sequences with identical prefixes. If a sequence is identical to the prefix of two or more longer sequences, it is clustered with the shortest of them. If they are equally long, it is clustered with the most abundant."/>
        </section>
    </inputs>
    <outputs>
        <data name="dereplicated_table" format="qza" label="${tool.name} on ${on_string}: dereplicated_table.qza" from_work_dir="dereplicated_table.qza"/>
        <data name="dereplicated_sequences" format="qza" label="${tool.name} on ${on_string}: dereplicated_sequences.qza" from_work_dir="dereplicated_sequences.qza"/>
    </outputs>
    <tests/>
    <help>
QIIME 2: vsearch dereplicate-sequences
======================================
Dereplicate sequences.


Outputs:
--------
:dereplicated_table.qza: The table of dereplicated sequences.
:dereplicated_sequences.qza: The dereplicated sequences.

|  

Description:
------------
Dereplicate sequence data and create a feature table and feature representative sequences. Feature identifiers in the resulting artifacts will be the sha1 hash of the sequence defining each feature. If clustering of features into OTUs is desired, the resulting artifacts can be passed to the cluster_features_* methods in this plugin.


|  

</help>
    <citations>
        <citation type="doi">10.7717/peerj.2584</citation>
        <citation type="doi">10.1038/s41587-019-0209-9</citation>
    </citations>
</tool>
