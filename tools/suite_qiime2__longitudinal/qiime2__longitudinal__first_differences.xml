<?xml version='1.0' encoding='utf-8'?>
<!--
Copyright (c) 2022, QIIME 2 development team.

Distributed under the terms of the Modified BSD License. (SPDX: BSD-3-Clause)
-->
<!--
This tool was automatically generated by:
    q2galaxy (version: 2022.8.1)
for:
    qiime2 (version: 2022.8.1)
-->
<tool name="qiime2 longitudinal first-differences" id="qiime2__longitudinal__first_differences" version="2022.8.0+q2galaxy.2022.8.1.2" profile="22.05" license="BSD-3-Clause">
    <description>Compute first differences or difference from baseline between sequential states</description>
    <requirements>
        <container type="docker">quay.io/qiime2/core:2022.8</container>
    </requirements>
    <version_command>q2galaxy version longitudinal</version_command>
    <command detect_errors="aggressive">q2galaxy run longitudinal first_differences '$inputs'</command>
    <configfiles>
        <inputs name="inputs" data_style="paths"/>
    </configfiles>
    <inputs>
        <repeat name="metadata" min="1" help="[required]  Sample metadata file containing individual_id_column." title="metadata: Metadata">
            <conditional name="__q2galaxy__GUI__conditional__metadata__">
                <param name="type" type="select" label="metadata: Metadata">
                    <option value="tsv" selected="true">Metadata from TSV</option>
                    <option value="qza">Metadata from Artifact</option>
                </param>
                <when value="tsv">
                    <param name="source" type="data" format="tabular,qiime2.tabular" label="Metadata Source"/>
                </when>
                <when value="qza">
                    <param name="source" type="data" format="qza" label="Metadata Source"/>
                </when>
            </conditional>
        </repeat>
        <param name="state_column" type="text" label="state_column: Str" help="[required]  Metadata column containing state (time) variable information.">
            <sanitizer>
                <valid initial="string.printable"/>
            </sanitizer>
            <validator type="expression" message="Please verify this parameter.">value is not None and len(value) &gt; 0</validator>
        </param>
        <param name="individual_id_column" type="text" label="individual_id_column: Str" help="[required]  Metadata column containing IDs for individual subjects.">
            <sanitizer>
                <valid initial="string.printable"/>
            </sanitizer>
            <validator type="expression" message="Please verify this parameter.">value is not None and len(value) &gt; 0</validator>
        </param>
        <param name="metric" type="text" label="metric: Str" help="[required]  Numerical metadata or artifact column to test.">
            <sanitizer>
                <valid initial="string.printable"/>
            </sanitizer>
            <validator type="expression" message="Please verify this parameter.">value is not None and len(value) &gt; 0</validator>
        </param>
        <section name="__q2galaxy__GUI__section__extra_opts__" title="Click here for additional options">
            <param name="table" type="data" format="qza" optional="true" label="table: FeatureTable[RelativeFrequency]" help="[optional]  Feature table to optionally use for computing first differences.">
                <options options_filter_attribute="metadata.semantic_type">
                    <filter type="add_value" value="FeatureTable[RelativeFrequency]"/>
                </options>
                <validator type="expression" message="Incompatible type">hasattr(value.metadata, "semantic_type") and value.metadata.semantic_type in ['FeatureTable[RelativeFrequency]']</validator>
            </param>
            <param name="replicate_handling" type="select" label="replicate_handling: Str % Choices('error', 'random', 'drop')" display="radio">
                <option value="error" selected="true">error</option>
                <option value="random">random</option>
                <option value="drop">drop</option>
            </param>
            <param name="baseline" type="float" optional="true" label="baseline: Float" help="[optional]  A value listed in the state_column metadata column against which all other states should be compared. Toggles calculation of static differences instead of first differences (which are calculated if no value is given for baseline). If a &quot;baseline&quot; value is provided, sample differences at each state are compared against the baseline state, instead of the previous state. Must be a value listed in the state_column."/>
        </section>
    </inputs>
    <outputs>
        <data name="first_differences" format="qza" label="${tool.name} on ${on_string}: first_differences.qza" from_work_dir="first_differences.qza"/>
    </outputs>
    <tests/>
    <help>
QIIME 2: longitudinal first-differences
=======================================
Compute first differences or difference from baseline between sequential states


Outputs:
--------
:first_differences.qza: Series of first differences.

|  

Description:
------------
Calculates first differences in "metric" between sequential states for samples collected from individual subjects sampled repeatedly at two or more states. First differences can be performed on a metadata column (including artifacts that can be input as metadata) or a feature in a feature table. Outputs a data series of first differences for each individual subject at each sequential pair of states, labeled by the SampleID of the second state (e.g., paired differences between time 0 and time 1 would be labeled by the SampleIDs at time 1). This file can be used as input to linear mixed effects models or other longitudinal or diversity methods to compare changes in first differences across time or among groups of subjects. Also supports differences from baseline (or other static comparison state) by setting the "baseline" parameter.


|  

</help>
    <citations>
        <citation type="doi">10.1128/mSystems.00219-18</citation>
        <citation type="doi">10.1038/s41587-019-0209-9</citation>
    </citations>
</tool>
