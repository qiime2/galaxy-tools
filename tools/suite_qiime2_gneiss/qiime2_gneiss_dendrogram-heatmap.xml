<?xml version='1.0' encoding='utf-8'?>
<!--
Copyright (c) 2022, QIIME 2 development team.

Distributed under the terms of the Modified BSD License. (SPDX: BSD-3-Clause)
-->
<!--
This tool was automatically generated by:
    q2galaxy (version: 2022.2.0)
for:
    qiime2 (version: 2022.2.1)
-->
<tool name="qiime2 gneiss dendrogram-heatmap" id="qiime2_gneiss_dendrogram-heatmap" version="2022.2.0+q2galaxy.2022.2.0" profile="20.09" license="BSD-3-Clause">
    <description>Dendrogram heatmap.</description>
    <requirements>
        <container type="docker">quay.io/qiime2/core:2022.2</container>
    </requirements>
    <version_command>q2galaxy version gneiss</version_command>
    <command detect_errors="aggressive">q2galaxy run gneiss dendrogram_heatmap '$inputs'</command>
    <configfiles>
        <inputs name="inputs" data_style="paths"/>
    </configfiles>
    <inputs>
        <param name="table" type="data" format="qza" label="table: FeatureTable[Frequency]" help="[required]  The feature table that will be plotted as a heatmap. This table is assumed to have strictly positive values.">
            <options options_filter_attribute="metadata.semantic_type">
                <filter type="add_value" value="FeatureTable[Frequency]"/>
            </options>
            <validator type="expression" message="Incompatible type">hasattr(value.metadata, "semantic_type") and value.metadata.semantic_type in {'FeatureTable[Frequency]'}</validator>
        </param>
        <param name="tree" type="data" format="qza" label="tree: Hierarchy" help="[required]  A hierarchy of feature identifiers where each tipcorresponds to the feature identifiers in the table. This tree can contain tip ids that are not present in the table, but all feature ids in the table must be present in this tree.">
            <options options_filter_attribute="metadata.semantic_type">
                <filter type="add_value" value="Hierarchy"/>
            </options>
            <validator type="expression" message="Incompatible type">hasattr(value.metadata, "semantic_type") and value.metadata.semantic_type in {'Hierarchy'}</validator>
        </param>
        <conditional name="metadata">
            <param name="type" type="select" label="metadata: MetadataColumn[Categorical]" help="[required]  Categorical metadata column to group the samples.">
                <option value="tsv" selected="true">Metadata from TSV</option>
                <option value="qza">Metadata from Artifact</option>
            </param>
            <when value="tsv">
                <param name="source" type="data" format="tabular,qiime2.tabular" label="Metadata Source"/>
                <param name="column" type="data_column" label="Column Name" data_ref="source" use_header_names="true">
                    <validator type="expression" message="The first column cannot be selected (they are IDs).">value != "1"</validator>
                </param>
            </when>
            <when value="qza">
                <param name="source" type="data" format="qza" label="Metadata Source"/>
                <param name="column" type="text" label="Column Name">
                    <validator type="empty_field"/>
                </param>
            </when>
        </conditional>
        <section name="__q2galaxy__GUI__section__extra_opts__" title="Click here for additional options">
            <param name="pseudocount" type="float" value="0.5" label="pseudocount: Float" help="[default: 0.5]  The pseudocount to add to avoid division by zero."/>
            <param name="ndim" type="integer" value="10" label="ndim: Int" help="[default: 10]  Number of dimensions to highlight."/>
            <param name="method" type="select" label="method: Str % Choices('clr', 'log')" help="[default: 'clr']  Specifies how the data should be normalized for display.Options include 'log' or 'clr' (default='clr')." display="radio">
                <option value="clr" selected="true">clr</option>
                <option value="log">log</option>
            </param>
            <param name="color_map" type="select" label="color_map: Str % Choices('viridis', 'inferno', 'plasma', 'magma', 'Blues', 'BuGn', 'BuPu', 'GnBu', 'Greens', 'Greys', 'Oranges', 'OrRd', 'PuBu', 'PuBuGn', 'PuRd', 'Purples', 'RdPu', 'Reds', 'YlGn', 'YlGnBu', 'YlOrBr', 'YlOrRd', 'afmhot', 'autumn', 'bone', 'cool', 'copper', 'gist_heat', 'gray', 'hot', 'pink', 'spring', 'summer', 'winter', 'BrBG', 'bwr', 'coolwarm', 'PiYG', 'PRGn', 'PuOr', 'RdBu', 'RdGy', 'RdYlBu', 'RdYlGn', 'Spectral', 'seismic', 'Accent', 'Dark2', 'Paired', 'Pastel1', 'Pastel2', 'Set1', 'Set2', 'Set3', 'Vega10', 'Vega20', 'Vega20b', 'Vega20c', 'gist_earth', 'terrain', 'ocean', 'gist_stern', 'brg', 'CMRmap', 'cubehelix', 'gnuplot', 'gnuplot2', 'gist_ncar', 'nipy_spectral', 'jet', 'rainbow', 'gist_rainbow', 'hsv', 'flag', 'prism')" help="[default: 'viridis']  Specifies the color map for plotting the heatmap. See https://matplotlib.org/examples/color/colormaps_reference.html for more details.">
                <option value="viridis" selected="true">viridis</option>
                <option value="inferno">inferno</option>
                <option value="plasma">plasma</option>
                <option value="magma">magma</option>
                <option value="Blues">Blues</option>
                <option value="BuGn">BuGn</option>
                <option value="BuPu">BuPu</option>
                <option value="GnBu">GnBu</option>
                <option value="Greens">Greens</option>
                <option value="Greys">Greys</option>
                <option value="Oranges">Oranges</option>
                <option value="OrRd">OrRd</option>
                <option value="PuBu">PuBu</option>
                <option value="PuBuGn">PuBuGn</option>
                <option value="PuRd">PuRd</option>
                <option value="Purples">Purples</option>
                <option value="RdPu">RdPu</option>
                <option value="Reds">Reds</option>
                <option value="YlGn">YlGn</option>
                <option value="YlGnBu">YlGnBu</option>
                <option value="YlOrBr">YlOrBr</option>
                <option value="YlOrRd">YlOrRd</option>
                <option value="afmhot">afmhot</option>
                <option value="autumn">autumn</option>
                <option value="bone">bone</option>
                <option value="cool">cool</option>
                <option value="copper">copper</option>
                <option value="gist_heat">gist_heat</option>
                <option value="gray">gray</option>
                <option value="hot">hot</option>
                <option value="pink">pink</option>
                <option value="spring">spring</option>
                <option value="summer">summer</option>
                <option value="winter">winter</option>
                <option value="BrBG">BrBG</option>
                <option value="bwr">bwr</option>
                <option value="coolwarm">coolwarm</option>
                <option value="PiYG">PiYG</option>
                <option value="PRGn">PRGn</option>
                <option value="PuOr">PuOr</option>
                <option value="RdBu">RdBu</option>
                <option value="RdGy">RdGy</option>
                <option value="RdYlBu">RdYlBu</option>
                <option value="RdYlGn">RdYlGn</option>
                <option value="Spectral">Spectral</option>
                <option value="seismic">seismic</option>
                <option value="Accent">Accent</option>
                <option value="Dark2">Dark2</option>
                <option value="Paired">Paired</option>
                <option value="Pastel1">Pastel1</option>
                <option value="Pastel2">Pastel2</option>
                <option value="Set1">Set1</option>
                <option value="Set2">Set2</option>
                <option value="Set3">Set3</option>
                <option value="Vega10">Vega10</option>
                <option value="Vega20">Vega20</option>
                <option value="Vega20b">Vega20b</option>
                <option value="Vega20c">Vega20c</option>
                <option value="gist_earth">gist_earth</option>
                <option value="terrain">terrain</option>
                <option value="ocean">ocean</option>
                <option value="gist_stern">gist_stern</option>
                <option value="brg">brg</option>
                <option value="CMRmap">CMRmap</option>
                <option value="cubehelix">cubehelix</option>
                <option value="gnuplot">gnuplot</option>
                <option value="gnuplot2">gnuplot2</option>
                <option value="gist_ncar">gist_ncar</option>
                <option value="nipy_spectral">nipy_spectral</option>
                <option value="jet">jet</option>
                <option value="rainbow">rainbow</option>
                <option value="gist_rainbow">gist_rainbow</option>
                <option value="hsv">hsv</option>
                <option value="flag">flag</option>
                <option value="prism">prism</option>
            </param>
        </section>
    </inputs>
    <outputs>
        <data name="visualization" format="qzv" label="${tool.id} on ${on_string}: visualization.qzv" from_work_dir="visualization.qzv"/>
    </outputs>
    <tests/>
    <help>
QIIME 2: gneiss dendrogram-heatmap
==================================
Dendrogram heatmap.


Outputs:
--------
:visualization.qzv: &lt;no description&gt;

|  

Description:
------------
Visualize the feature table as a heatmap, with samples sorted along a specified categorical metadata column and features clustered together specified by the tree.


|  

</help>
    <citations>
        <citation type="bibtex">@article{cite1,
 author = {Morton, James T and Sanders, Jon and Quinn, Robert A and McDonald, Daniel and Gonzalez, Antonio and VÃ¡zquez-Baeza, Yoshiki and Navas-Molina, Jose A and Song, Se Jin and Metcalf, Jessica L and Hyde, Embriette R and Lladser, Manuel and Dorrestein, Pieter C and Knight, Rob},
 journal = {MSystems},
 number = {1},
 pages = {e00162--16},
 publisher = {Am Soc Microbiol},
 title = {Balance trees reveal microbial niche differentiation},
 volume = {2},
 year = {2017}
}

</citation>
        <citation type="bibtex">@article{cite2,
 author = {Bolyen, Evan and Rideout, Jai Ram and Dillon, Matthew R. and Bokulich, Nicholas A. and Abnet, Christian C. and Al-Ghalith, Gabriel A. and Alexander, Harriet and Alm, Eric J. and Arumugam, Manimozhiyan and Asnicar, Francesco and Bai, Yang and Bisanz, Jordan E. and Bittinger, Kyle and Brejnrod, Asker and Brislawn, Colin J. and Brown, C. Titus and Callahan, Benjamin J. and Caraballo-RodrÃ­guez, AndrÃ©s Mauricio and Chase, John and Cope, Emily K. and Da Silva, Ricardo and Diener, Christian and Dorrestein, Pieter C. and Douglas, Gavin M. and Durall, Daniel M. and Duvallet, Claire and Edwardson, Christian F. and Ernst, Madeleine and Estaki, Mehrbod and Fouquier, Jennifer and Gauglitz, Julia M. and Gibbons, Sean M. and Gibson, Deanna L. and Gonzalez, Antonio and Gorlick, Kestrel and Guo, Jiarong and Hillmann, Benjamin and Holmes, Susan and Holste, Hannes and Huttenhower, Curtis and Huttley, Gavin A. and Janssen, Stefan and Jarmusch, Alan K. and Jiang, Lingjing and Kaehler, Benjamin D. and Kang, Kyo Bin and Keefe, Christopher R. and Keim, Paul and Kelley, Scott T. and Knights, Dan and Koester, Irina and Kosciolek, Tomasz and Kreps, Jorden and Langille, Morgan G. I. and Lee, Joslynn and Ley, Ruth and Liu, Yong-Xin and Loftfield, Erikka and Lozupone, Catherine and Maher, Massoud and Marotz, Clarisse and Martin, Bryan D. and McDonald, Daniel and McIver, Lauren J. and Melnik, Alexey V. and Metcalf, Jessica L. and Morgan, Sydney C. and Morton, Jamie T. and Naimey, Ahmad Turan and Navas-Molina, Jose A. and Nothias, Louis Felix and Orchanian, Stephanie B. and Pearson, Talima and Peoples, Samuel L. and Petras, Daniel and Preuss, Mary Lai and Pruesse, Elmar and Rasmussen, Lasse Buur and Rivers, Adam and Robeson, Michael S. and Rosenthal, Patrick and Segata, Nicola and Shaffer, Michael and Shiffer, Arron and Sinha, Rashmi and Song, Se Jin and Spear, John R. and Swafford, Austin D. and Thompson, Luke R. and Torres, Pedro J. and Trinh, Pauline and Tripathi, Anupriya and Turnbaugh, Peter J. and Ul-Hasan, Sabah and van der Hooft, Justin J. J. and Vargas, Fernando and VÃ¡zquez-Baeza, Yoshiki and Vogtmann, Emily and von Hippel, Max and Walters, William and Wan, Yunhu and Wang, Mingxun and Warren, Jonathan and Weber, Kyle C. and Williamson, Charles H. D. and Willis, Amy D. and Xu, Zhenjiang Zech and Zaneveld, Jesse R. and Zhang, Yilong and Zhu, Qiyun and Knight, Rob and Caporaso, J. Gregory},
 doi = {10.1038/s41587-019-0209-9},
 issn = {1546-1696},
 journal = {Nature Biotechnology},
 number = {8},
 pages = {852-857},
 title = {Reproducible, interactive, scalable and extensible microbiome data science using QIIME 2},
 url = {https://doi.org/10.1038/s41587-019-0209-9},
 volume = {37},
 year = {2019}
}

</citation>
    </citations>
</tool>
