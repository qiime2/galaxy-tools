<?xml version='1.0' encoding='utf-8'?>
<!--
Copyright (c) 2024, QIIME 2 development team.

Distributed under the terms of the Modified BSD License. (SPDX: BSD-3-Clause)
-->
<!--
This tool was automatically generated by:
    q2galaxy (version: 2024.10.0)
for:
    qiime2 (version: 2024.10.1)
-->
<tool name="qiime2 stats wilcoxon-srt" id="qiime2__stats__wilcoxon_srt" version="0+unknown-q2galaxy.2024.10.0" profile="22.05" license="BSD-3-Clause">
    <description>Wilcoxon Signed Rank Test</description>
    <xrefs>
        <xref type="bio.tools">qiime2</xref>
    </xrefs>
    <requirements>
        <container type="docker">quay.io/qiime2/amplicon:2024.10</container>
    </requirements>
    <version_command>q2galaxy version stats</version_command>
    <command detect_errors="exit_code">q2galaxy run stats wilcoxon_srt '$inputs'</command>
    <configfiles>
        <inputs name="inputs" data_style="staging_path_and_source_path"/>
    </configfiles>
    <inputs>
        <param name="distribution" type="data" format="qza" label="distribution: Dist1D[Ordered, Matched]" help="[required]">
            <options options_filter_attribute="metadata.semantic_type">
                <filter type="add_value" value="Dist1D[Ordered, Matched]"/>
            </options>
            <validator type="expression" message="Incompatible type">hasattr(value.metadata, "semantic_type") and value.metadata.semantic_type in ['Dist1D[Ordered, Matched]']</validator>
        </param>
        <param name="compare" type="select" label="compare: Str % Choices('baseline', 'consecutive')" display="radio">
            <option value="__q2galaxy__::literal::None">Selection required</option>
            <option value="baseline">baseline</option>
            <option value="consecutive">consecutive</option>
            <validator type="expression" message="Please verify this parameter.">value != '__q2galaxy__::literal::None'</validator>
        </param>
        <section name="__q2galaxy__GUI__section__extra_opts__" title="Click here for additional options">
            <conditional name="__q2galaxy__GUI__conditional__baseline_group__" label="baseline_group: Str">
                <param name="__q2galaxy__GUI__select__" type="select" label="baseline_group: Str" help="[optional]  If &quot;baseline&quot; is the selected comparison, this is the column that will be used to compare all other groups against.">
                    <option value="__q2galaxy__::control::default" selected="true">None (Use default behavior)</option>
                    <option value="__q2galaxy__::control::provide">Provide a value</option>
                </param>
                <when value="__q2galaxy__::control::default">
                    <param name="baseline_group" type="hidden" value="__q2galaxy__::literal::None"/>
                </when>
                <when value="__q2galaxy__::control::provide">
                    <param name="baseline_group" type="text">
                        <sanitizer>
                            <valid initial="string.printable"/>
                        </sanitizer>
                    </param>
                </when>
            </conditional>
            <param name="alternative" type="select" label="alternative: Str % Choices('two-sided', 'greater', 'less')" display="radio">
                <option value="two-sided" selected="true">two-sided</option>
                <option value="greater">greater</option>
                <option value="less">less</option>
            </param>
            <param name="p_val_approx" type="select" label="p_val_approx: Str % Choices('auto', 'exact', 'asymptotic')" display="radio">
                <option value="auto" selected="true">auto</option>
                <option value="exact">exact</option>
                <option value="asymptotic">asymptotic</option>
            </param>
            <param name="ignore_empty_comparator" type="boolean" truevalue="__q2galaxy__::literal::True" falsevalue="__q2galaxy__::literal::False" label="ignore_empty_comparator: Bool" help="[default: No]  Ignore any group that does not have any overlapping subjects with comparison group. These groups will have NaNs in the stats table output"/>
        </section>
    </inputs>
    <outputs>
        <data name="stats" format="qza" label="${tool.name} on ${on_string}: stats.qza" from_work_dir="stats.qza"/>
    </outputs>
    <tests>
        <test>
            <param name="distribution" value="wilcoxon_srt.test0.timedist.qza" ftype="qza"/>
            <param name="compare" value="baseline"/>
            <param name="baseline_group" value="0"/>
            <param name="p_val_approx" value="asymptotic"/>
            <output name="stats" ftype="qza">
                <assert_contents>
                    <has_archive_member path="[0-9a-f]{8}-[0-9a-f]{4}-[4][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}\/metadata.yaml">
                        <has_line_matching expression="type: StatsTable\[Pairwise\]"/>
                    </has_archive_member>
                </assert_contents>
            </output>
        </test>
    </tests>
    <help>
QIIME 2: stats wilcoxon-srt
===========================
Wilcoxon Signed Rank Test


Outputs:
--------
:stats.qza: The Wilcoxon SRT table for either the "baseline" or "consecutive" comparison.

|  

Description:
------------


Examples:
---------

wilcoxon_baseline0
******************
Using the ``qiime2 stats wilcoxon-srt`` tool:
 #. Set *"distribution"* to ``#: timedist.qza``
 #. Set *"compare"* to ``baseline``
 #. Expand the ``additional options`` section

    #. Set *"baseline_group"* to ``0``
    #. Set *"p_val_approx"* to ``asymptotic``

 #. Press the ``Execute`` button.



|  

</help>
    <citations>
        <citation type="doi">https://doi.org/10.2307/3001968</citation>
        <citation type="doi">10.1038/s41587-019-0209-9</citation>
    </citations>
</tool>
