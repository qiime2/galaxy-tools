<?xml version='1.0' encoding='utf-8'?>
<!--
Copyright (c) 2025, QIIME 2 development team.

Distributed under the terms of the Modified BSD License. (SPDX: BSD-3-Clause)
-->
<!--
This tool was automatically generated by:
    q2galaxy (version: 2025.10.0)
for:
    qiime2 (version: 2025.10.0)
-->
<tool name="qiime2 boots beta" id="qiime2__boots__beta" version="2025.10.0+q2galaxy.2025.10.0" profile="22.05" license="BSD-3-Clause">
    <description>Perform resampled beta diversity, returning average distance matrix.</description>
    <xrefs>
        <xref type="bio.tools">qiime2</xref>
    </xrefs>
    <requirements>
        <container type="docker">quay.io/qiime2/amplicon:2025.10</container>
    </requirements>
    <version_command>q2galaxy version boots</version_command>
    <command detect_errors="exit_code">q2galaxy run boots beta '$inputs'</command>
    <configfiles>
        <inputs name="inputs" data_style="staging_path_and_source_path"/>
    </configfiles>
    <inputs>
        <param name="table" type="data" format="qza" label="table: FeatureTable[Frequency | RelativeFrequency | PresenceAbsence]" help="[required]  The input feature table.">
            <options options_filter_attribute="metadata.semantic_type">
                <filter type="add_value" value="FeatureTable[RelativeFrequency]"/>
                <filter type="add_value" value="FeatureTable[Frequency]"/>
                <filter type="add_value" value="FeatureTable[PresenceAbsence]"/>
            </options>
            <validator type="expression" message="Incompatible type">hasattr(value.metadata, "semantic_type") and value.metadata.semantic_type in ['FeatureTable[Frequency]', 'FeatureTable[PresenceAbsence]', 'FeatureTable[RelativeFrequency]']</validator>
        </param>
        <param name="metric" type="select" label="metric: Str % Choices('aitchison', 'braycurtis', 'canberra', 'canberra_adkins', 'chebyshev', 'cityblock', 'correlation', 'cosine', 'dice', 'euclidean', 'generalized_unifrac', 'hamming', 'jaccard', 'jensenshannon', 'matching', 'minkowski', 'rogerstanimoto', 'russellrao', 'seuclidean', 'sokalmichener', 'sokalsneath', 'sqeuclidean', 'unweighted_unifrac', 'weighted_normalized_unifrac', 'weighted_unifrac', 'yule')">
            <option value="__q2galaxy__::literal::None">Selection required</option>
            <option value="aitchison">aitchison</option>
            <option value="braycurtis">braycurtis</option>
            <option value="canberra">canberra</option>
            <option value="canberra_adkins">canberra_adkins</option>
            <option value="chebyshev">chebyshev</option>
            <option value="cityblock">cityblock</option>
            <option value="correlation">correlation</option>
            <option value="cosine">cosine</option>
            <option value="dice">dice</option>
            <option value="euclidean">euclidean</option>
            <option value="generalized_unifrac">generalized_unifrac</option>
            <option value="hamming">hamming</option>
            <option value="jaccard">jaccard</option>
            <option value="jensenshannon">jensenshannon</option>
            <option value="matching">matching</option>
            <option value="minkowski">minkowski</option>
            <option value="rogerstanimoto">rogerstanimoto</option>
            <option value="russellrao">russellrao</option>
            <option value="seuclidean">seuclidean</option>
            <option value="sokalmichener">sokalmichener</option>
            <option value="sokalsneath">sokalsneath</option>
            <option value="sqeuclidean">sqeuclidean</option>
            <option value="unweighted_unifrac">unweighted_unifrac</option>
            <option value="weighted_normalized_unifrac">weighted_normalized_unifrac</option>
            <option value="weighted_unifrac">weighted_unifrac</option>
            <option value="yule">yule</option>
            <validator type="expression" message="Please verify this parameter.">value != '__q2galaxy__::literal::None'</validator>
        </param>
        <param name="sampling_depth" type="integer" min="1" value="" label="sampling_depth: Int % Range(1, None)" help="[required]  The total number of observations that each sample in `table` should be resampled to. Samples where the total number of observations in `table` is less than `sampling_depth` will be not be included in the output tables."/>
        <param name="n" type="integer" min="1" value="" label="n: Int % Range(1, None)" help="[required]  The number of resampled tables that should be generated."/>
        <param name="replacement" type="select" label="replacement: Bool" help="[required]  Resample `table` with replacement (i.e., bootstrap) or without replacement (i.e., rarefaction)." display="radio">
            <option value="__q2galaxy__::literal::None">Selection required</option>
            <option value="__q2galaxy__::literal::True">Yes</option>
            <option value="__q2galaxy__::literal::False">No</option>
            <validator type="expression" message="Please verify this parameter.">value != '__q2galaxy__::literal::None'</validator>
        </param>
        <section name="__q2galaxy__GUI__section__extra_opts__" title="Click here for additional options">
            <param name="phylogeny" type="data" format="qza" optional="true" label="phylogeny: Phylogeny[Rooted]" help="[optional]  The phylogenetic tree to use in phylogenetic diversity calculations. All feature ids in `table` must be present in this tree, but this tree can contain feature ids that are not present in `table`.">
                <options options_filter_attribute="metadata.semantic_type">
                    <filter type="add_value" value="Phylogeny[Rooted]"/>
                </options>
                <validator type="expression" message="Incompatible type">hasattr(value.metadata, "semantic_type") and value.metadata.semantic_type in ['Phylogeny[Rooted]']</validator>
            </param>
            <param name="average_method" type="select" label="average_method: Str % Choices('non-metric-mean', 'non-metric-median', 'medoid')" display="radio">
                <option value="non-metric-mean">non-metric-mean</option>
                <option value="non-metric-median" selected="true">non-metric-median</option>
                <option value="medoid">medoid</option>
            </param>
            <param name="bypass_tips" type="boolean" truevalue="__q2galaxy__::literal::True" falsevalue="__q2galaxy__::literal::False" label="bypass_tips: Bool" help="[default: No]  Ignore tips of tree in phylogenetic diversity calculations, trading specificity for reduced compute time. This has the effect of collapsing the phylogeny, and is analogous (in concept) to moving from 99% to 97% OTUs."/>
            <param name="pseudocount" type="integer" min="1" value="1" label="pseudocount: Int % Range(1, None)" help="[default: 1]  A pseudocount to handle zeros for compositional metrics.  This is ignored for other metrics."/>
            <param name="alpha" type="float" min="0" max="1" optional="true" label="alpha: Float % Range(0, 1, inclusive_end=True)" help="[optional]  The alpha value used with the generalized UniFrac metric."/>
            <param name="variance_adjusted" type="boolean" truevalue="__q2galaxy__::literal::True" falsevalue="__q2galaxy__::literal::False" label="variance_adjusted: Bool" help="[default: No]  Perform variance adjustment based on Chang et al. BMC Bioinformatics (2011) for phylogenetic diversity metrics."/>
        </section>
    </inputs>
    <outputs>
        <data name="average_distance_matrix" format="qza" label="${tool.name} on ${on_string}: average_distance_matrix.qza" from_work_dir="average_distance_matrix.qza"/>
    </outputs>
    <tests/>
    <help>
QIIME 2: boots beta
===================
Perform resampled beta diversity, returning average distance matrix.


Outputs:
--------
:average_distance_matrix.qza: The average distance matrix.

|  

Description:
------------
Given a single feature table as input, this action resamples the feature table `n` times to a total frequency of `sampling depth` per sample, and then computes the specified beta diversity metric on each resulting `table`. The resulting artifacts are then averaged using the method specified by `average_method`, and the resulting average beta diversity distance matrix is returned.


|  

</help>
    <citations>
        <citation type="doi">https://doi.org/10.12688/f1000research.156295.1</citation>
        <citation type="doi">10.1038/s41587-019-0209-9</citation>
    </citations>
</tool>
