<?xml version='1.0' encoding='utf-8'?>
<!--
Copyright (c) 2024, QIIME 2 development team.

Distributed under the terms of the Modified BSD License. (SPDX: BSD-3-Clause)
-->
<!--
This tool was automatically generated by:
    q2galaxy (version: 2024.10.0)
for:
    qiime2 (version: 2024.10.1)
-->
<tool name="qiime2 rescript get-bv-brc-metadata" id="qiime2__rescript__get_bv_brc_metadata" version="2024.10.0+q2galaxy.2024.10.0" profile="22.05" license="BSD-3-Clause">
    <description>Fetch BV-BCR metadata.</description>
    <xrefs>
        <xref type="bio.tools">qiime2</xref>
    </xrefs>
    <requirements>
        <container type="docker">quay.io/qiime2/amplicon:2024.10</container>
    </requirements>
    <version_command>q2galaxy version rescript</version_command>
    <command detect_errors="exit_code">q2galaxy run rescript get_bv_brc_metadata '$inputs'</command>
    <configfiles>
        <inputs name="inputs" data_style="staging_path_and_source_path"/>
    </configfiles>
    <inputs>
        <section name="__q2galaxy__GUI__section__extra_opts__" title="Click here for additional options">
            <conditional name="ids_metadata">
                <param name="type" type="select" label="ids_metadata: MetadataColumn[Numeric | Categorical]" help="[optional]  A metadata column obtained with the action get-bv-brc-metadata that can be used as a query.">
                    <option value="none" selected="true">None (default)</option>
                    <option value="tsv">Metadata from TSV</option>
                    <option value="qza">Metadata from Artifact</option>
                </param>
                <when value="none"/>
                <when value="tsv">
                    <param name="source" type="data" format="tabular,qiime2.tabular" label="Metadata Source"/>
                    <param name="column" type="data_column" label="Column Name" data_ref="source" use_header_names="true">
                        <validator type="expression" message="The first column cannot be selected (they are IDs).">value != "1"</validator>
                    </param>
                </when>
                <when value="qza">
                    <param name="source" type="data" format="qza" label="Metadata Source"/>
                    <param name="column" type="text" label="Column Name">
                        <validator type="empty_field"/>
                    </param>
                </when>
            </conditional>
            <param name="data_type" type="select" label="data_type: Str % Choices('antibiotics', 'enzyme_class_ref', 'epitope', 'epitope_assay', 'experiment', 'bioset', 'bioset_result', 'gene_ontology_ref', 'genome', 'strain', 'genome_amr', 'feature_sequence', 'genome_feature', 'genome_sequence', 'id_ref', 'misc_niaid_sgc', 'pathway', 'pathway_ref', 'ppi', 'protein_family_ref', 'sequence_feature', 'sequence_feature_vt', 'sp_gene', 'sp_gene_ref', 'spike_lineage', 'spike_variant', 'structured_assertion', 'subsystem', 'subsystem_ref', 'taxonomy', 'protein_structure', 'protein_feature', 'surveillance', 'serology')">
                <option value="__q2galaxy__::literal::None" selected="true">None (Use default behavior)</option>
                <option value="antibiotics">antibiotics</option>
                <option value="enzyme_class_ref">enzyme_class_ref</option>
                <option value="epitope">epitope</option>
                <option value="epitope_assay">epitope_assay</option>
                <option value="experiment">experiment</option>
                <option value="bioset">bioset</option>
                <option value="bioset_result">bioset_result</option>
                <option value="gene_ontology_ref">gene_ontology_ref</option>
                <option value="genome">genome</option>
                <option value="strain">strain</option>
                <option value="genome_amr">genome_amr</option>
                <option value="feature_sequence">feature_sequence</option>
                <option value="genome_feature">genome_feature</option>
                <option value="genome_sequence">genome_sequence</option>
                <option value="id_ref">id_ref</option>
                <option value="misc_niaid_sgc">misc_niaid_sgc</option>
                <option value="pathway">pathway</option>
                <option value="pathway_ref">pathway_ref</option>
                <option value="ppi">ppi</option>
                <option value="protein_family_ref">protein_family_ref</option>
                <option value="sequence_feature">sequence_feature</option>
                <option value="sequence_feature_vt">sequence_feature_vt</option>
                <option value="sp_gene">sp_gene</option>
                <option value="sp_gene_ref">sp_gene_ref</option>
                <option value="spike_lineage">spike_lineage</option>
                <option value="spike_variant">spike_variant</option>
                <option value="structured_assertion">structured_assertion</option>
                <option value="subsystem">subsystem</option>
                <option value="subsystem_ref">subsystem_ref</option>
                <option value="taxonomy">taxonomy</option>
                <option value="protein_structure">protein_structure</option>
                <option value="protein_feature">protein_feature</option>
                <option value="surveillance">surveillance</option>
                <option value="serology">serology</option>
            </param>
            <conditional name="__q2galaxy__GUI__conditional__rql_query__" label="rql_query: Str">
                <param name="__q2galaxy__GUI__select__" type="select" label="rql_query: Str" help="[optional]  Query in RQL format. To download all data for genome_ids &quot;224308.43&quot; and &quot;2030927.4755&quot;, the RQL query looks like this: &quot;in(genome_id,(224308.43,2030927.4755))&quot;. While &quot;in&quot; is an RQL operator, &quot;genome_id&quot; is a data field and &quot;224308.43,2030927.4755&quot; are the values. It is important to percent encode values if they contain illegal characters like spaces. The values &quot;Bacillus subtilis&quot; and &quot;Bacteroidales bacterium&quot; have to be provided with percent encoded quotes (%22) and spaces (%20) like this: &quot;in(species,(%22Bacillus%20subtilis%22,%22Bacteroidales%20bacterium%22))&quot;. Check https://www.bv-brc.org/api/doc/ for documentation on data types and corresponding data fields.">
                    <option value="__q2galaxy__::control::default" selected="true">None (Use default behavior)</option>
                    <option value="__q2galaxy__::control::provide">Provide a value</option>
                </param>
                <when value="__q2galaxy__::control::default">
                    <param name="rql_query" type="hidden" value="__q2galaxy__::literal::None"/>
                </when>
                <when value="__q2galaxy__::control::provide">
                    <param name="rql_query" type="text">
                        <sanitizer>
                            <valid initial="string.printable"/>
                        </sanitizer>
                    </param>
                </when>
            </conditional>
            <conditional name="__q2galaxy__GUI__conditional__data_field__" label="data_field: Str">
                <param name="__q2galaxy__GUI__select__" type="select" label="data_field: Str" help="[optional]  Data field of the specified &quot;data-type&quot;. This parameter can only be used in conjunction with the &quot;ids&quot; parameter. Retrieves metadata associated with the IDs/values specified in parameter &quot;ids&quot; in this data field. Check https://www.bv-brc.org/api/doc/ for allowed data fields in the specified &quot;data-type&quot;.">
                    <option value="__q2galaxy__::control::default" selected="true">None (Use default behavior)</option>
                    <option value="__q2galaxy__::control::provide">Provide a value</option>
                </param>
                <when value="__q2galaxy__::control::default">
                    <param name="data_field" type="hidden" value="__q2galaxy__::literal::None"/>
                </when>
                <when value="__q2galaxy__::control::provide">
                    <param name="data_field" type="text">
                        <sanitizer>
                            <valid initial="string.printable"/>
                        </sanitizer>
                    </param>
                </when>
            </conditional>
            <repeat name="ids" help="[optional]  IDs/values of the corresponding data field. This parameter can only be used in conjunction with the &quot;data-field&quot; parameter. Retrieves all data associated with these IDs/values in the specified data field." title="ids: List[Str]">
                <param name="element" type="text" label="element: Str" help="[required]">
                    <sanitizer>
                        <valid initial="string.printable"/>
                    </sanitizer>
                    <validator type="expression" message="Please verify this parameter.">value is not None and len(value) &gt; 0</validator>
                </param>
            </repeat>
        </section>
    </inputs>
    <outputs>
        <data name="metadata" format="qza" label="${tool.name} on ${on_string}: metadata.qza" from_work_dir="metadata.qza"/>
    </outputs>
    <tests/>
    <help>
QIIME 2: rescript get-bv-brc-metadata
=====================================
Fetch BV-BCR metadata.


Outputs:
--------
:metadata.qza: BV-BCR metadata of specified data type.

|  

Description:
------------
Fetch BV-BCR metadata for a specific data type. BV-BRC (Bacterial and Viral Bioinformatics Resource Center) is a database for bacterial and viral genomes, annotations, and metadata. There are three ways to query data: You can use an RQL query to refine your search and get targeted results. By providing IDs/values and a corresponding data field, you can retrieve all metadata associated with those specific values in that data field. And as a third option a metadata column can be provided, to use the results from other data types as a new query. Check https://www.bv-brc.org/api/doc/ for documentation.


|  

</help>
    <citations>
        <citation type="bibtex">@article{cite1,
 author = {Olson, Robert D and Assaf, Rida and Brettin, Thomas and Conrad, Neal and Cucinell, Clark and Davis, James J and Dempsey, Donald M and Dickerman, Allan and Dietrich, Emily M and Kenyon, Ronald W and others},
 journal = {Nucleic acids research},
 number = {D1},
 pages = {D678--D689},
 publisher = {Oxford University Press},
 title = {Introducing the bacterial and viral bioinformatics resource center (BV-BRC): a resource combining PATRIC, IRD and ViPR},
 volume = {51},
 year = {2023}
}
</citation>
        <citation type="doi">10.1371/journal.pcbi.1009581</citation>
        <citation type="doi">10.1038/s41587-019-0209-9</citation>
    </citations>
</tool>
