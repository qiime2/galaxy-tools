<?xml version='1.0' encoding='utf-8'?>
<!--
Copyright (c) 2024, QIIME 2 development team.

Distributed under the terms of the Modified BSD License. (SPDX: BSD-3-Clause)
-->
<!--
This tool was automatically generated by:
    q2galaxy (version: 2024.10.0)
for:
    qiime2 (version: 2024.10.1)
-->
<tool name="qiime2 rescript extract-seq-segments" id="qiime2__rescript__extract_seq_segments" version="2024.10.0+q2galaxy.2024.10.0" profile="22.05" license="BSD-3-Clause">
    <description>Use reference sequences to extract shorter matching sequence segments from longer sequences based on a user-defined 'perc-identity' value.</description>
    <xrefs>
        <xref type="bio.tools">qiime2</xref>
    </xrefs>
    <requirements>
        <container type="docker">quay.io/qiime2/amplicon:2024.10</container>
    </requirements>
    <version_command>q2galaxy version rescript</version_command>
    <command detect_errors="exit_code">q2galaxy run rescript extract_seq_segments '$inputs'</command>
    <configfiles>
        <inputs name="inputs" data_style="staging_path_and_source_path"/>
    </configfiles>
    <inputs>
        <param name="input_sequences" type="data" format="qza" label="input_sequences: FeatureData[Sequence]" help="[required]  Sequences from which matching shorter sequence segments (regions) can be extracted from. Sequences containing segments that match those from 'reference-segment-sequences' will have those segments extracted and written to file.">
            <options options_filter_attribute="metadata.semantic_type">
                <filter type="add_value" value="FeatureData[Sequence]"/>
            </options>
            <validator type="expression" message="Incompatible type">hasattr(value.metadata, "semantic_type") and value.metadata.semantic_type in ['FeatureData[Sequence]']</validator>
        </param>
        <param name="reference_segment_sequences" type="data" format="qza" label="reference_segment_sequences: FeatureData[Sequence]" help="[required]  Reference sequence segments that will be used to search for and extract matching segments from 'input-sequences'.">
            <options options_filter_attribute="metadata.semantic_type">
                <filter type="add_value" value="FeatureData[Sequence]"/>
            </options>
            <validator type="expression" message="Incompatible type">hasattr(value.metadata, "semantic_type") and value.metadata.semantic_type in ['FeatureData[Sequence]']</validator>
        </param>
        <section name="__q2galaxy__GUI__section__extra_opts__" title="Click here for additional options">
            <param name="perc_identity" type="float" min="1e-06" max="1" value="0.7" label="perc_identity: Float % Range(0, 1, inclusive_start=False, inclusive_end=True)" help="[default: 0.7]  The percent identity at which clustering should be performed. This parameter maps to vsearch's --id parameter."/>
            <param name="target_coverage" type="float" min="1e-06" max="1" value="0.9" label="target_coverage: Float % Range(0, 1, inclusive_start=False, inclusive_end=True)" help="[default: 0.9]  The minimum fraction of coverage that 'reference-segment-sequences' must have in order to extract matching segments from 'input-sequences'."/>
            <param name="min_seq_len" type="integer" min="1" optional="true" label="min_seq_len: Int % Range(1, None)" help="[optional]  Minimum length of sequence allowed for searching. Any sequence less than this will be discarded. If not set, default program settings will be used."/>
            <param name="threads" type="integer" min="1" max="255" value="1" label="threads: Int % Range(1, 256)" help="[default: 1]  Number of computation threads to use (1 to 256). The number of threads should be lesser or equal to the number of available CPU cores."/>
        </section>
    </inputs>
    <outputs>
        <data name="extracted_sequence_segments" format="qza" label="${tool.name} on ${on_string}: extracted_sequence_segments.qza" from_work_dir="extracted_sequence_segments.qza"/>
        <data name="unmatched_sequences" format="qza" label="${tool.name} on ${on_string}: unmatched_sequences.qza" from_work_dir="unmatched_sequences.qza"/>
    </outputs>
    <tests/>
    <help>
QIIME 2: rescript extract-seq-segments
======================================
Use reference sequences to extract shorter matching sequence segments from longer sequences based on a user-defined 'perc-identity' value.


Outputs:
--------
:extracted_sequence_segments.qza: Extracted sequence segments from 'input-sequences' that succesfully aligned to 'reference-segment-sequences'.
:unmatched_sequences.qza: Sequences in 'input-sequences' that did not have matching sequence segments within 'reference-segment-sequences'.

|  

Description:
------------
This action provides the ability to extract a region, or segment, of sequence without the need to specify primer pairs. This is very useful in cases when one or more of the primer sequences are not present within the target sequences, which prevents extraction of the (amplicon) region through primer-pair searching. Here, VSEARCH is used to extract these segments based on a reference pool of sequences that only span the region of interest.


|  

</help>
    <citations>
        <citation type="doi">10.7717/peerj.2584</citation>
        <citation type="doi">10.1371/journal.pcbi.1009581</citation>
        <citation type="doi">10.1038/s41587-019-0209-9</citation>
    </citations>
</tool>
