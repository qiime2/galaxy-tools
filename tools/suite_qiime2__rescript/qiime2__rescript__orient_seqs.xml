<?xml version='1.0' encoding='utf-8'?>
<!--
Copyright (c) 2024, QIIME 2 development team.

Distributed under the terms of the Modified BSD License. (SPDX: BSD-3-Clause)
-->
<!--
This tool was automatically generated by:
    q2galaxy (version: 2024.10.0)
for:
    qiime2 (version: 2024.10.1)
-->
<tool name="qiime2 rescript orient-seqs" id="qiime2__rescript__orient_seqs" version="2024.10.0+q2galaxy.2024.10.0" profile="22.05" license="BSD-3-Clause">
    <description>Orient input sequences by comparison against reference.</description>
    <xrefs>
        <xref type="bio.tools">qiime2</xref>
    </xrefs>
    <requirements>
        <container type="docker">quay.io/qiime2/amplicon:2024.10</container>
    </requirements>
    <version_command>q2galaxy version rescript</version_command>
    <command detect_errors="exit_code">q2galaxy run rescript orient_seqs '$inputs'</command>
    <configfiles>
        <inputs name="inputs" data_style="staging_path_and_source_path"/>
    </configfiles>
    <inputs>
        <param name="sequences" type="data" format="qza" label="sequences: FeatureData[Sequence]" help="[required]  Sequences to be oriented.">
            <options options_filter_attribute="metadata.semantic_type">
                <filter type="add_value" value="FeatureData[Sequence]"/>
            </options>
            <validator type="expression" message="Incompatible type">hasattr(value.metadata, "semantic_type") and value.metadata.semantic_type in ['FeatureData[Sequence]']</validator>
        </param>
        <section name="__q2galaxy__GUI__section__extra_opts__" title="Click here for additional options">
            <param name="reference_sequences" type="data" format="qza" optional="true" label="reference_sequences: FeatureData[Sequence]" help="[optional]  Reference sequences to orient against. If no reference is provided, all the sequences will be reverse complemented and all parameters will be ignored.">
                <options options_filter_attribute="metadata.semantic_type">
                    <filter type="add_value" value="FeatureData[Sequence]"/>
                </options>
                <validator type="expression" message="Incompatible type">hasattr(value.metadata, "semantic_type") and value.metadata.semantic_type in ['FeatureData[Sequence]']</validator>
            </param>
            <param name="threads" type="integer" min="1" max="255" value="1" label="threads: Int % Range(1, 256)" help="[default: 1]  Number of computation threads to use (1 to 256). The number of threads should be lesser or equal to the number of available CPU cores."/>
            <param name="dbmask" type="select" label="dbmask: Str % Choices('none', 'dust', 'soft')" display="radio">
                <option value="__q2galaxy__::literal::None" selected="true">None (Use default behavior)</option>
                <option value="none">none</option>
                <option value="dust">dust</option>
                <option value="soft">soft</option>
            </param>
            <conditional name="__q2galaxy__GUI__conditional__relabel__" label="relabel: Str">
                <param name="__q2galaxy__GUI__select__" type="select" label="relabel: Str" help="[optional]  Relabel sequences using the prefix string and a ticker (1, 2, 3, etc.) to construct the new headers. Use --sizeout to conserve the abundance annotations.">
                    <option value="__q2galaxy__::control::default" selected="true">None (Use default behavior)</option>
                    <option value="__q2galaxy__::control::provide">Provide a value</option>
                </param>
                <when value="__q2galaxy__::control::default">
                    <param name="relabel" type="hidden" value="__q2galaxy__::literal::None"/>
                </when>
                <when value="__q2galaxy__::control::provide">
                    <param name="relabel" type="text">
                        <sanitizer>
                            <valid initial="string.printable"/>
                        </sanitizer>
                    </param>
                </when>
            </conditional>
            <param name="relabel_keep" type="select" label="relabel_keep: Bool" help="[optional]  When relabeling, keep the original identifier in the header after a space." display="radio">
                <option value="__q2galaxy__::literal::None" selected="true">None (Use default behavior)</option>
                <option value="__q2galaxy__::literal::True">Yes</option>
                <option value="__q2galaxy__::literal::False">No</option>
            </param>
            <param name="relabel_md5" type="select" label="relabel_md5: Bool" help="[optional]  When relabeling, use the MD5 digest of the sequence as the new identifier. Use --sizeout to conserve the abundance annotations." display="radio">
                <option value="__q2galaxy__::literal::None" selected="true">None (Use default behavior)</option>
                <option value="__q2galaxy__::literal::True">Yes</option>
                <option value="__q2galaxy__::literal::False">No</option>
            </param>
            <param name="relabel_self" type="select" label="relabel_self: Bool" help="[optional]  Relabel sequences using the sequence itself as a label." display="radio">
                <option value="__q2galaxy__::literal::None" selected="true">None (Use default behavior)</option>
                <option value="__q2galaxy__::literal::True">Yes</option>
                <option value="__q2galaxy__::literal::False">No</option>
            </param>
            <param name="relabel_sha1" type="select" label="relabel_sha1: Bool" help="[optional]  When relabeling, use the SHA1 digest of the sequence as the new identifier. The probability of a collision is smaller than the MD5 algorithm." display="radio">
                <option value="__q2galaxy__::literal::None" selected="true">None (Use default behavior)</option>
                <option value="__q2galaxy__::literal::True">Yes</option>
                <option value="__q2galaxy__::literal::False">No</option>
            </param>
            <param name="sizein" type="select" label="sizein: Bool" help="[optional]  In de novo mode, abundance annotations (pattern `[&gt;;]size=integer[;]`) present in sequence headers are taken into account." display="radio">
                <option value="__q2galaxy__::literal::None" selected="true">None (Use default behavior)</option>
                <option value="__q2galaxy__::literal::True">Yes</option>
                <option value="__q2galaxy__::literal::False">No</option>
            </param>
            <param name="sizeout" type="select" label="sizeout: Bool" help="[optional]  Add abundance annotations to the output FASTA files." display="radio">
                <option value="__q2galaxy__::literal::None" selected="true">None (Use default behavior)</option>
                <option value="__q2galaxy__::literal::True">Yes</option>
                <option value="__q2galaxy__::literal::False">No</option>
            </param>
        </section>
    </inputs>
    <outputs>
        <data name="oriented_seqs" format="qza" label="${tool.name} on ${on_string}: oriented_seqs.qza" from_work_dir="oriented_seqs.qza"/>
        <data name="unmatched_seqs" format="qza" label="${tool.name} on ${on_string}: unmatched_seqs.qza" from_work_dir="unmatched_seqs.qza"/>
    </outputs>
    <tests/>
    <help>
QIIME 2: rescript orient-seqs
=============================
Orient input sequences by comparison against reference.


Outputs:
--------
:oriented_seqs.qza: Query sequences in same orientation as top matching reference sequence.
:unmatched_seqs.qza: Query sequences that fail to match at least one reference sequence in either + or - orientation. This will be empty if no refrence is provided.

|  

Description:
------------
Orient input sequences by comparison against a set of reference sequences using VSEARCH. This action can also be used to quickly filter out sequences that (do not) match a set of reference sequences in either orientation. Alternatively, if no reference sequences are provided as input, all input sequences will be reverse-complemented. In this case, no alignment is performed, and all alignment parameters (`dbmask`, `relabel`, `relabel_keep`, `relabel_md5`, `relabel_self`, `relabel_sha1`, `sizein`, `sizeout` and `threads`) are ignored.


|  

</help>
    <citations>
        <citation type="doi">10.7717/peerj.2584</citation>
        <citation type="doi">10.1371/journal.pcbi.1009581</citation>
        <citation type="doi">10.1038/s41587-019-0209-9</citation>
    </citations>
</tool>
