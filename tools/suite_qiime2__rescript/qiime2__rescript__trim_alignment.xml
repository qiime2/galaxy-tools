<?xml version='1.0' encoding='utf-8'?>
<!--
Copyright (c) 2024, QIIME 2 development team.

Distributed under the terms of the Modified BSD License. (SPDX: BSD-3-Clause)
-->
<!--
This tool was automatically generated by:
    q2galaxy (version: 2024.10.0)
for:
    qiime2 (version: 2024.10.1)
-->
<tool name="qiime2 rescript trim-alignment" id="qiime2__rescript__trim_alignment" version="2024.10.0+q2galaxy.2024.10.0" profile="22.05" license="BSD-3-Clause">
    <description>Trim alignment based on provided primers or specific positions.</description>
    <xrefs>
        <xref type="bio.tools">qiime2</xref>
    </xrefs>
    <requirements>
        <container type="docker">quay.io/qiime2/amplicon:2024.10</container>
    </requirements>
    <version_command>q2galaxy version rescript</version_command>
    <command detect_errors="exit_code">q2galaxy run rescript trim_alignment '$inputs'</command>
    <configfiles>
        <inputs name="inputs" data_style="staging_path_and_source_path"/>
    </configfiles>
    <inputs>
        <param name="aligned_sequences" type="data" format="qza" label="aligned_sequences: FeatureData[AlignedSequence]" help="[required]  Aligned DNA sequences.">
            <options options_filter_attribute="metadata.semantic_type">
                <filter type="add_value" value="FeatureData[AlignedSequence]"/>
            </options>
            <validator type="expression" message="Incompatible type">hasattr(value.metadata, "semantic_type") and value.metadata.semantic_type in ['FeatureData[AlignedSequence]']</validator>
        </param>
        <section name="__q2galaxy__GUI__section__extra_opts__" title="Click here for additional options">
            <conditional name="__q2galaxy__GUI__conditional__primer_fwd__" label="primer_fwd: Str">
                <param name="__q2galaxy__GUI__select__" type="select" label="primer_fwd: Str" help="[optional]  Forward primer used to find the start position for alignment trimming. Provide as 5'-3'.">
                    <option value="__q2galaxy__::control::default" selected="true">None (Use default behavior)</option>
                    <option value="__q2galaxy__::control::provide">Provide a value</option>
                </param>
                <when value="__q2galaxy__::control::default">
                    <param name="primer_fwd" type="hidden" value="__q2galaxy__::literal::None"/>
                </when>
                <when value="__q2galaxy__::control::provide">
                    <param name="primer_fwd" type="text">
                        <sanitizer>
                            <valid initial="string.printable"/>
                        </sanitizer>
                    </param>
                </when>
            </conditional>
            <conditional name="__q2galaxy__GUI__conditional__primer_rev__" label="primer_rev: Str">
                <param name="__q2galaxy__GUI__select__" type="select" label="primer_rev: Str" help="[optional]  Reverse primer used to find the end position for alignment trimming. Provide as 5'-3'.">
                    <option value="__q2galaxy__::control::default" selected="true">None (Use default behavior)</option>
                    <option value="__q2galaxy__::control::provide">Provide a value</option>
                </param>
                <when value="__q2galaxy__::control::default">
                    <param name="primer_rev" type="hidden" value="__q2galaxy__::literal::None"/>
                </when>
                <when value="__q2galaxy__::control::provide">
                    <param name="primer_rev" type="text">
                        <sanitizer>
                            <valid initial="string.printable"/>
                        </sanitizer>
                    </param>
                </when>
            </conditional>
            <param name="position_start" type="integer" min="1" optional="true" label="position_start: Int % Range(1, None)" help="[optional]  Position within the alignment where the trimming will begin. If not provided, alignment will notbe trimmed at the beginning. If forward primer isspecified this parameter will be ignored."/>
            <param name="position_end" type="integer" min="1" optional="true" label="position_end: Int % Range(1, None)" help="[optional]  Position within the alignment where the trimming will end. If not provided, alignment will not be trimmed at the end. If reverse primer is specified this parameter will be ignored."/>
            <param name="n_threads" type="integer" min="1" value="1" label="n_threads: Int % Range(1, None)" help="[default: 1]  Number of threads to use for primer-based trimming, otherwise ignored. (Use `auto` to automatically use all available cores)"/>
        </section>
    </inputs>
    <outputs>
        <data name="trimmed_sequences" format="qza" label="${tool.name} on ${on_string}: trimmed_sequences.qza" from_work_dir="trimmed_sequences.qza"/>
    </outputs>
    <tests/>
    <help>
QIIME 2: rescript trim-alignment
================================
Trim alignment based on provided primers or specific positions.


Outputs:
--------
:trimmed_sequences.qza: Trimmed sequence alignment.

|  

Description:
------------
Trim an existing alignment based on provided primers or specific, pre-defined positions. Primers take precedence over the positions,i.e. if both are provided, positions will be ignored.When using primers in combination with a DNA alignment, a new alignment will be generated to locate primer positions. Subsequently, start (5'-most) and end (3'-most) position from fwd and rev primer located within the new alignment is identified and used for slicing the original alignment.


|  

</help>
    <citations>
        <citation type="doi">10.1371/journal.pcbi.1009581</citation>
        <citation type="doi">10.1038/s41587-019-0209-9</citation>
    </citations>
</tool>
