<?xml version='1.0' encoding='utf-8'?>
<!--
Copyright (c) 2024, QIIME 2 development team.

Distributed under the terms of the Modified BSD License. (SPDX: BSD-3-Clause)
-->
<!--
This tool was automatically generated by:
    q2galaxy (version: 2024.10.0)
for:
    qiime2 (version: 2024.10.1)
-->
<tool name="qiime2 feature-classifier classify-consensus-blast" id="qiime2__feature_classifier__classify_consensus_blast" version="2024.10.0+q2galaxy.2024.10.0" profile="22.05" license="BSD-3-Clause">
    <description>BLAST+ consensus taxonomy classifier</description>
    <xrefs>
        <xref type="bio.tools">qiime2</xref>
    </xrefs>
    <requirements>
        <container type="docker">quay.io/qiime2/amplicon:2024.10</container>
    </requirements>
    <version_command>q2galaxy version feature_classifier</version_command>
    <command detect_errors="exit_code">q2galaxy run feature_classifier classify_consensus_blast '$inputs'</command>
    <configfiles>
        <inputs name="inputs" data_style="staging_path_and_source_path"/>
    </configfiles>
    <inputs>
        <param name="query" type="data" format="qza" label="query: FeatureData[Sequence]" help="[required]  Query sequences.">
            <options options_filter_attribute="metadata.semantic_type">
                <filter type="add_value" value="FeatureData[Sequence]"/>
            </options>
            <validator type="expression" message="Incompatible type">hasattr(value.metadata, "semantic_type") and value.metadata.semantic_type in ['FeatureData[Sequence]']</validator>
        </param>
        <param name="reference_taxonomy" type="data" format="qza" label="reference_taxonomy: FeatureData[Taxonomy]" help="[required]  reference taxonomy labels.">
            <options options_filter_attribute="metadata.semantic_type">
                <filter type="add_value" value="FeatureData[Taxonomy]"/>
            </options>
            <validator type="expression" message="Incompatible type">hasattr(value.metadata, "semantic_type") and value.metadata.semantic_type in ['FeatureData[Taxonomy]']</validator>
        </param>
        <section name="__q2galaxy__GUI__section__extra_opts__" title="Click here for additional options">
            <param name="blastdb" type="data" format="qza" optional="true" label="blastdb: BLASTDB" help="[optional]  BLAST indexed database. Incompatible with reference_reads.">
                <options options_filter_attribute="metadata.semantic_type">
                    <filter type="add_value" value="BLASTDB"/>
                </options>
                <validator type="expression" message="Incompatible type">hasattr(value.metadata, "semantic_type") and value.metadata.semantic_type in ['BLASTDB']</validator>
            </param>
            <param name="reference_reads" type="data" format="qza" optional="true" label="reference_reads: FeatureData[Sequence]" help="[optional]  Reference sequences. Incompatible with blastdb.">
                <options options_filter_attribute="metadata.semantic_type">
                    <filter type="add_value" value="FeatureData[Sequence]"/>
                </options>
                <validator type="expression" message="Incompatible type">hasattr(value.metadata, "semantic_type") and value.metadata.semantic_type in ['FeatureData[Sequence]']</validator>
            </param>
            <param name="maxaccepts" type="integer" min="1" value="10" label="maxaccepts: Int % Range(1, None)" help="[default: 10]  Maximum number of hits to keep for each query. BLAST will choose the first N hits in the reference database that exceed perc_identity similarity to query. NOTE: the database is not sorted by similarity to query, so these are the first N hits that pass the threshold, not necessarily the top N hits."/>
            <param name="perc_identity" type="float" min="0.0" max="1.0" value="0.8" label="perc_identity: Float % Range(0.0, 1.0, inclusive_end=True)" help="[default: 0.8]  Reject match if percent identity to query is lower."/>
            <param name="query_cov" type="float" min="0.0" max="1.0" value="0.8" label="query_cov: Float % Range(0.0, 1.0, inclusive_end=True)" help="[default: 0.8]  Reject match if query alignment coverage per high-scoring pair is lower. Note: this uses blastn's qcov_hsp_perc parameter, and may not behave identically to the query_cov parameter used by classify-consensus-vsearch."/>
            <param name="strand" type="select" label="strand: Str % Choices('both', 'plus', 'minus')" display="radio">
                <option value="both" selected="true">both</option>
                <option value="plus">plus</option>
                <option value="minus">minus</option>
            </param>
            <param name="evalue" type="float" value="0.001" label="evalue: Float" help="[default: 0.001]  BLAST expectation value (E) threshold for saving hits."/>
            <param name="output_no_hits" type="boolean" truevalue="__q2galaxy__::literal::True" falsevalue="__q2galaxy__::literal::False" checked="true" label="output_no_hits: Bool" help="[default: Yes]  Report both matching and non-matching queries. WARNING: always use the default setting for this option unless if you know what you are doing! If you set this option to False, your sequences and feature table will need to be filtered to exclude unclassified sequences, otherwise you may run into errors downstream from missing feature IDs. Set to FALSE to mirror default BLAST search."/>
            <param name="min_consensus" type="float" min="0.500001" max="1.0" value="0.51" label="min_consensus: Float % Range(0.5, 1.0, inclusive_start=False, inclusive_end=True)" help="[default: 0.51]  Minimum fraction of assignments must match top hit to be accepted as consensus assignment."/>
            <param name="unassignable_label" type="text" value="Unassigned" label="unassignable_label: Str" help="[default: 'Unassigned']  Annotation given to sequences without any hits.">
                <sanitizer>
                    <valid initial="string.printable"/>
                </sanitizer>
            </param>
        </section>
    </inputs>
    <outputs>
        <data name="classification" format="qza" label="${tool.name} on ${on_string}: classification.qza" from_work_dir="classification.qza"/>
        <data name="search_results" format="qza" label="${tool.name} on ${on_string}: search_results.qza" from_work_dir="search_results.qza"/>
    </outputs>
    <tests/>
    <help>
QIIME 2: feature-classifier classify-consensus-blast
====================================================
BLAST+ consensus taxonomy classifier


Outputs:
--------
:classification.qza: Taxonomy classifications of query sequences.
:search_results.qza: Top hits for each query.

|  

Description:
------------
Assign taxonomy to query sequences using BLAST+. Performs BLAST+ local alignment between query and reference_reads, then assigns consensus taxonomy to each query sequence from among maxaccepts hits, min_consensus of which share that taxonomic assignment. Note that maxaccepts selects the first N hits with &gt; perc_identity similarity to query, not the top N matches. For top N hits, use classify-consensus-vsearch.


|  

</help>
    <citations>
        <citation type="doi">10.1186/1471-2105-10-421</citation>
        <citation type="doi">10.1186/s40168-018-0470-z</citation>
        <citation type="doi">10.1038/s41587-019-0209-9</citation>
    </citations>
</tool>
