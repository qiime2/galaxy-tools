<?xml version='1.0' encoding='utf-8'?>
<!--
Copyright (c) 2024, QIIME 2 development team.

Distributed under the terms of the Modified BSD License. (SPDX: BSD-3-Clause)
-->
<!--
This tool was automatically generated by:
    q2galaxy (version: 2024.10.0)
for:
    qiime2 (version: 2024.10.1)
-->
<tool name="qiime2 phylogeny align-to-tree-mafft-fasttree" id="qiime2__phylogeny__align_to_tree_mafft_fasttree" version="2024.10.0+q2galaxy.2024.10.0" profile="22.05" license="BSD-3-Clause">
    <description>Build a phylogenetic tree using fasttree and mafft alignment</description>
    <xrefs>
        <xref type="bio.tools">qiime2</xref>
    </xrefs>
    <requirements>
        <container type="docker">quay.io/qiime2/amplicon:2024.10</container>
    </requirements>
    <version_command>q2galaxy version phylogeny</version_command>
    <command detect_errors="exit_code">q2galaxy run phylogeny align_to_tree_mafft_fasttree '$inputs'</command>
    <configfiles>
        <inputs name="inputs" data_style="staging_path_and_source_path"/>
    </configfiles>
    <inputs>
        <param name="sequences" type="data" format="qza" label="sequences: FeatureData[Sequence]" help="[required]  The sequences to be used for creating a fasttree based rooted phylogenetic tree.">
            <options options_filter_attribute="metadata.semantic_type">
                <filter type="add_value" value="FeatureData[Sequence]"/>
            </options>
            <validator type="expression" message="Incompatible type">hasattr(value.metadata, "semantic_type") and value.metadata.semantic_type in ['FeatureData[Sequence]']</validator>
        </param>
        <section name="__q2galaxy__GUI__section__extra_opts__" title="Click here for additional options">
            <param name="mask_max_gap_frequency" type="float" min="0" max="1" value="1.0" label="mask_max_gap_frequency: Float % Range(0, 1, inclusive_end=True)" help="[default: 1.0]  The maximum relative frequency of gap characters in a column for the column to be retained. This relative frequency must be a number between 0.0 and 1.0 (inclusive), where 0.0 retains only those columns without gap characters, and 1.0 retains all columns  regardless of gap character frequency. This value is used when masking the aligned sequences."/>
            <param name="mask_min_conservation" type="float" min="0" max="1" value="0.4" label="mask_min_conservation: Float % Range(0, 1, inclusive_end=True)" help="[default: 0.4]  The minimum relative frequency of at least one non-gap character in a column for that column to be retained. This relative frequency must be a number between 0.0 and 1.0 (inclusive). For example, if a value of  0.4 is provided, a column will only be retained  if it contains at least one character that is present in at least 40% of the sequences. This value is used when masking the aligned sequences."/>
            <param name="parttree" type="boolean" truevalue="__q2galaxy__::literal::True" falsevalue="__q2galaxy__::literal::False" label="parttree: Bool" help="[default: No]  This flag is required if the number of sequences being aligned are larger than 1000000. Disabled by default."/>
        </section>
    </inputs>
    <outputs>
        <data name="alignment" format="qza" label="${tool.name} on ${on_string}: alignment.qza" from_work_dir="alignment.qza"/>
        <data name="masked_alignment" format="qza" label="${tool.name} on ${on_string}: masked_alignment.qza" from_work_dir="masked_alignment.qza"/>
        <data name="tree" format="qza" label="${tool.name} on ${on_string}: tree.qza" from_work_dir="tree.qza"/>
        <data name="rooted_tree" format="qza" label="${tool.name} on ${on_string}: rooted_tree.qza" from_work_dir="rooted_tree.qza"/>
    </outputs>
    <tests>
        <test>
            <param name="sequences" value="align_to_tree_mafft_fasttree.test0.rep-seqs.qza" ftype="qza"/>
            <output name="alignment" ftype="qza">
                <assert_contents>
                    <has_archive_member path="[0-9a-f]{8}-[0-9a-f]{4}-[4][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}\/metadata.yaml">
                        <has_line_matching expression="type: FeatureData\[AlignedSequence\]"/>
                    </has_archive_member>
                </assert_contents>
            </output>
            <output name="masked_alignment" ftype="qza">
                <assert_contents>
                    <has_archive_member path="[0-9a-f]{8}-[0-9a-f]{4}-[4][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}\/metadata.yaml">
                        <has_line_matching expression="type: FeatureData\[AlignedSequence\]"/>
                    </has_archive_member>
                </assert_contents>
            </output>
            <output name="tree" ftype="qza">
                <assert_contents>
                    <has_archive_member path="[0-9a-f]{8}-[0-9a-f]{4}-[4][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}\/metadata.yaml">
                        <has_line_matching expression="type: Phylogeny\[Unrooted\]"/>
                    </has_archive_member>
                </assert_contents>
            </output>
            <output name="rooted_tree" ftype="qza">
                <assert_contents>
                    <has_archive_member path="[0-9a-f]{8}-[0-9a-f]{4}-[4][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}\/metadata.yaml">
                        <has_line_matching expression="type: Phylogeny\[Rooted\]"/>
                    </has_archive_member>
                </assert_contents>
            </output>
        </test>
    </tests>
    <help>
QIIME 2: phylogeny align-to-tree-mafft-fasttree
===============================================
Build a phylogenetic tree using fasttree and mafft alignment


Outputs:
--------
:alignment.qza: The aligned sequences.
:masked_alignment.qza: The masked alignment.
:tree.qza: The unrooted phylogenetic tree.
:rooted_tree.qza: The rooted phylogenetic tree.

|  

Description:
------------
This pipeline will start by creating a sequence alignment using MAFFT, after which any alignment columns that are phylogenetically uninformative or ambiguously aligned will be removed (masked). The resulting masked alignment will be used to infer a phylogenetic tree and then subsequently rooted at its midpoint. Output files from each step of the pipeline will be saved. This includes both the unmasked and masked MAFFT alignment from q2-alignment methods, and both the rooted and unrooted phylogenies from q2-phylogeny methods.

Examples:
---------

align_to_tree_mafft_fasttree
****************************
Using the ``qiime2 phylogeny align-to-tree-mafft-fasttree`` tool:
 #. Set *"sequences"* to ``#: rep-seqs.qza``
 #. Press the ``Execute`` button.

Once completed, for each new entry in your history, use the ``Edit`` button to set the name as follows:
 (Renaming is optional, but it will make any subsequent steps easier to complete.)

 .. list-table::
    :align: left
    :header-rows: 1

    * - History Name
      - *"Name"* to set (be sure to press ``Save``)
    * - ``#: qiime2 phylogeny align-to-tree-mafft-fasttree [...] : alignment.qza``
      - ``aligned-rep-seqs.qza``
    * - ``#: qiime2 phylogeny align-to-tree-mafft-fasttree [...] : masked_alignment.qza``
      - ``masked-aligned-rep-seqs.qza``
    * - ``#: qiime2 phylogeny align-to-tree-mafft-fasttree [...] : tree.qza``
      - ``unrooted-tree.qza``
    * - ``#: qiime2 phylogeny align-to-tree-mafft-fasttree [...] : rooted_tree.qza``
      - ``rooted-tree.qza``


|  

</help>
    <citations>
        <citation type="doi">10.1038/s41587-019-0209-9</citation>
    </citations>
</tool>
