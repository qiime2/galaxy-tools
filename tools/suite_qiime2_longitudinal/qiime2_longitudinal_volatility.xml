<?xml version='1.0' encoding='utf-8'?>
<!--
Copyright (c) 2022, QIIME 2 development team.

Distributed under the terms of the Modified BSD License. (SPDX: BSD-3-Clause)
-->
<!--
This tool was automatically generated by:
    q2galaxy (version: 2022.2.0)
for:
    qiime2 (version: 2022.2.1)
-->
<tool name="qiime2 longitudinal volatility" id="qiime2_longitudinal_volatility" version="2022.2.0+q2galaxy.2022.2.0" profile="20.09" license="BSD-3-Clause">
    <description>Generate interactive volatility plot</description>
    <requirements>
        <container type="docker">quay.io/qiime2/core:2022.2</container>
    </requirements>
    <version_command>q2galaxy version longitudinal</version_command>
    <command detect_errors="aggressive">q2galaxy run longitudinal volatility '$inputs'</command>
    <configfiles>
        <inputs name="inputs" data_style="paths"/>
    </configfiles>
    <inputs>
        <repeat name="metadata" min="1" help="[required]  Sample metadata file containing individual_id_column." title="metadata: Metadata">
            <conditional name="__q2galaxy__GUI__conditional__metadata__">
                <param name="type" type="select" label="metadata: Metadata">
                    <option value="tsv" selected="true">Metadata from TSV</option>
                    <option value="qza">Metadata from Artifact</option>
                </param>
                <when value="tsv">
                    <param name="source" type="data" format="tabular,qiime2.tabular" label="Metadata Source"/>
                </when>
                <when value="qza">
                    <param name="source" type="data" format="qza" label="Metadata Source"/>
                </when>
            </conditional>
        </repeat>
        <param name="state_column" type="text" label="state_column: Str" help="[required]  Metadata column containing state (time) variable information.">
            <sanitizer>
                <valid initial="string.printable"/>
            </sanitizer>
            <validator type="expression" message="Please verify this parameter.">value is not None and len(value) &gt; 0</validator>
        </param>
        <section name="__q2galaxy__GUI__section__extra_opts__" title="Click here for additional options">
            <param name="table" type="data" format="qza" optional="true" label="table: FeatureTable[RelativeFrequency]" help="[optional]  Feature table containing metrics.">
                <options options_filter_attribute="metadata.semantic_type">
                    <filter type="add_value" value="FeatureTable[RelativeFrequency]"/>
                </options>
                <validator type="expression" message="Incompatible type">hasattr(value.metadata, "semantic_type") and value.metadata.semantic_type in {'FeatureTable[RelativeFrequency]'}</validator>
            </param>
            <conditional name="__q2galaxy__GUI__conditional__individual_id_column__" label="individual_id_column: Str" help="[optional]  Metadata column containing IDs for individual subjects.">
                <param name="__q2galaxy__GUI__select__" type="select" label="individual_id_column: Str" help="[optional]  Metadata column containing IDs for individual subjects.">
                    <option value="__q2galaxy__::control::default" selected="true">None (Use default behavior)</option>
                    <option value="__q2galaxy__::control::provide">Provide a value</option>
                </param>
                <when value="__q2galaxy__::control::default">
                    <param name="individual_id_column" type="hidden" value="__q2galaxy__::literal::None"/>
                </when>
                <when value="__q2galaxy__::control::provide">
                    <param name="individual_id_column" type="text">
                        <sanitizer>
                            <valid initial="string.printable"/>
                        </sanitizer>
                    </param>
                </when>
            </conditional>
            <conditional name="__q2galaxy__GUI__conditional__default_group_column__" label="default_group_column: Str" help="[optional]  The default metadata column on which to separate groups for comparison (all categorical metadata columns will be available in the visualization).">
                <param name="__q2galaxy__GUI__select__" type="select" label="default_group_column: Str" help="[optional]  The default metadata column on which to separate groups for comparison (all categorical metadata columns will be available in the visualization).">
                    <option value="__q2galaxy__::control::default" selected="true">None (Use default behavior)</option>
                    <option value="__q2galaxy__::control::provide">Provide a value</option>
                </param>
                <when value="__q2galaxy__::control::default">
                    <param name="default_group_column" type="hidden" value="__q2galaxy__::literal::None"/>
                </when>
                <when value="__q2galaxy__::control::provide">
                    <param name="default_group_column" type="text">
                        <sanitizer>
                            <valid initial="string.printable"/>
                        </sanitizer>
                    </param>
                </when>
            </conditional>
            <conditional name="__q2galaxy__GUI__conditional__default_metric__" label="default_metric: Str" help="[optional]  Numeric metadata or artifact column to test by default (all numeric metadata columns will be available in the visualization).">
                <param name="__q2galaxy__GUI__select__" type="select" label="default_metric: Str" help="[optional]  Numeric metadata or artifact column to test by default (all numeric metadata columns will be available in the visualization).">
                    <option value="__q2galaxy__::control::default" selected="true">None (Use default behavior)</option>
                    <option value="__q2galaxy__::control::provide">Provide a value</option>
                </param>
                <when value="__q2galaxy__::control::default">
                    <param name="default_metric" type="hidden" value="__q2galaxy__::literal::None"/>
                </when>
                <when value="__q2galaxy__::control::provide">
                    <param name="default_metric" type="text">
                        <sanitizer>
                            <valid initial="string.printable"/>
                        </sanitizer>
                    </param>
                </when>
            </conditional>
            <param name="yscale" type="select" label="yscale: Str % Choices('linear', 'pow', 'sqrt', 'log')" help="[default: 'linear']  y-axis scaling strategy to apply." display="radio">
                <option value="linear" selected="true">linear</option>
                <option value="pow">pow</option>
                <option value="sqrt">sqrt</option>
                <option value="log">log</option>
            </param>
        </section>
    </inputs>
    <outputs>
        <data name="visualization" format="qzv" label="${tool.id} on ${on_string}: visualization.qzv" from_work_dir="visualization.qzv"/>
    </outputs>
    <tests/>
    <help>
QIIME 2: longitudinal volatility
================================
Generate interactive volatility plot


Outputs:
--------
:visualization.qzv: &lt;no description&gt;

|  

Description:
------------
Generate an interactive control chart depicting the longitudinal volatility of sample metadata and/or feature frequencies across time (as set using the "state_column" parameter). Any numeric metadata column (and metadata-transformable artifacts, e.g., alpha diversity results) can be plotted on the y-axis, and are selectable using the "metric_column" selector. Metric values are averaged to compare across any categorical metadata column using the "group_column" selector. Longitudinal volatility for individual subjects sampled over time is co-plotted as "spaghetti" plots if the "individual_id_column" parameter is used. state_column will typically be a measure of time, but any numeric metadata column can be used.


|  

</help>
    <citations>
        <citation type="bibtex">@article{cite1,
 author = {Bokulich, Nicholas A. and Dillon, Matthew R. and Zhang, Yilong and Rideout, Jai Ram and Bolyen, Evan and Li, Huilin and Albert, Paul S. and Caporaso, J. Gregory},
 doi = {10.1128/mSystems.00219-18},
 journal = {mSystems},
 number = {6},
 pages = {e00219-18},
 title = {q2-longitudinal: Longitudinal and Paired-Sample Analyses of Microbiome Data},
 volume = {3},
 year = {2018}
}

</citation>
        <citation type="bibtex">@article{cite2,
 author = {Bolyen, Evan and Rideout, Jai Ram and Dillon, Matthew R. and Bokulich, Nicholas A. and Abnet, Christian C. and Al-Ghalith, Gabriel A. and Alexander, Harriet and Alm, Eric J. and Arumugam, Manimozhiyan and Asnicar, Francesco and Bai, Yang and Bisanz, Jordan E. and Bittinger, Kyle and Brejnrod, Asker and Brislawn, Colin J. and Brown, C. Titus and Callahan, Benjamin J. and Caraballo-Rodríguez, Andrés Mauricio and Chase, John and Cope, Emily K. and Da Silva, Ricardo and Diener, Christian and Dorrestein, Pieter C. and Douglas, Gavin M. and Durall, Daniel M. and Duvallet, Claire and Edwardson, Christian F. and Ernst, Madeleine and Estaki, Mehrbod and Fouquier, Jennifer and Gauglitz, Julia M. and Gibbons, Sean M. and Gibson, Deanna L. and Gonzalez, Antonio and Gorlick, Kestrel and Guo, Jiarong and Hillmann, Benjamin and Holmes, Susan and Holste, Hannes and Huttenhower, Curtis and Huttley, Gavin A. and Janssen, Stefan and Jarmusch, Alan K. and Jiang, Lingjing and Kaehler, Benjamin D. and Kang, Kyo Bin and Keefe, Christopher R. and Keim, Paul and Kelley, Scott T. and Knights, Dan and Koester, Irina and Kosciolek, Tomasz and Kreps, Jorden and Langille, Morgan G. I. and Lee, Joslynn and Ley, Ruth and Liu, Yong-Xin and Loftfield, Erikka and Lozupone, Catherine and Maher, Massoud and Marotz, Clarisse and Martin, Bryan D. and McDonald, Daniel and McIver, Lauren J. and Melnik, Alexey V. and Metcalf, Jessica L. and Morgan, Sydney C. and Morton, Jamie T. and Naimey, Ahmad Turan and Navas-Molina, Jose A. and Nothias, Louis Felix and Orchanian, Stephanie B. and Pearson, Talima and Peoples, Samuel L. and Petras, Daniel and Preuss, Mary Lai and Pruesse, Elmar and Rasmussen, Lasse Buur and Rivers, Adam and Robeson, Michael S. and Rosenthal, Patrick and Segata, Nicola and Shaffer, Michael and Shiffer, Arron and Sinha, Rashmi and Song, Se Jin and Spear, John R. and Swafford, Austin D. and Thompson, Luke R. and Torres, Pedro J. and Trinh, Pauline and Tripathi, Anupriya and Turnbaugh, Peter J. and Ul-Hasan, Sabah and van der Hooft, Justin J. J. and Vargas, Fernando and Vázquez-Baeza, Yoshiki and Vogtmann, Emily and von Hippel, Max and Walters, William and Wan, Yunhu and Wang, Mingxun and Warren, Jonathan and Weber, Kyle C. and Williamson, Charles H. D. and Willis, Amy D. and Xu, Zhenjiang Zech and Zaneveld, Jesse R. and Zhang, Yilong and Zhu, Qiyun and Knight, Rob and Caporaso, J. Gregory},
 doi = {10.1038/s41587-019-0209-9},
 issn = {1546-1696},
 journal = {Nature Biotechnology},
 number = {8},
 pages = {852-857},
 title = {Reproducible, interactive, scalable and extensible microbiome data science using QIIME 2},
 url = {https://doi.org/10.1038/s41587-019-0209-9},
 volume = {37},
 year = {2019}
}

</citation>
    </citations>
</tool>
