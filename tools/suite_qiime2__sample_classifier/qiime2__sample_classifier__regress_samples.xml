<?xml version='1.0' encoding='utf-8'?>
<!--
Copyright (c) 2023, QIIME 2 development team.

Distributed under the terms of the Modified BSD License. (SPDX: BSD-3-Clause)
-->
<!--
This tool was automatically generated by:
    q2galaxy (version: 2022.11.1)
for:
    qiime2 (version: 2022.11.1)
-->
<tool name="qiime2 sample-classifier regress-samples" id="qiime2__sample_classifier__regress_samples" version="2022.11.1+q2galaxy.2022.11.1.2" profile="22.05" license="BSD-3-Clause">
    <description>Train and test a cross-validated supervised learning regressor.</description>
    <requirements>
        <container type="docker">quay.io/qiime2/core:2022.11</container>
    </requirements>
    <version_command>q2galaxy version sample_classifier</version_command>
    <command detect_errors="exit_code">q2galaxy run sample_classifier regress_samples '$inputs'</command>
    <configfiles>
        <inputs name="inputs" data_style="paths"/>
    </configfiles>
    <inputs>
        <param name="table" type="data" format="qza" label="table: FeatureTable[Frequency]" help="[required]  Feature table containing all features that should be used for target prediction.">
            <options options_filter_attribute="metadata.semantic_type">
                <filter type="add_value" value="FeatureTable[Frequency]"/>
            </options>
            <validator type="expression" message="Incompatible type">hasattr(value.metadata, "semantic_type") and value.metadata.semantic_type in ['FeatureTable[Frequency]']</validator>
        </param>
        <conditional name="metadata">
            <param name="type" type="select" label="metadata: MetadataColumn[Numeric]" help="[required]  Numeric metadata column to use as prediction target.">
                <option value="tsv" selected="true">Metadata from TSV</option>
                <option value="qza">Metadata from Artifact</option>
            </param>
            <when value="tsv">
                <param name="source" type="data" format="tabular,qiime2.tabular" label="Metadata Source"/>
                <param name="column" type="data_column" label="Column Name" data_ref="source" use_header_names="true">
                    <validator type="expression" message="The first column cannot be selected (they are IDs).">value != "1"</validator>
                </param>
            </when>
            <when value="qza">
                <param name="source" type="data" format="qza" label="Metadata Source"/>
                <param name="column" type="text" label="Column Name">
                    <validator type="empty_field"/>
                </param>
            </when>
        </conditional>
        <section name="__q2galaxy__GUI__section__extra_opts__" title="Click here for additional options">
            <param name="test_size" type="float" min="0.0" max="0.999999" value="0.2" label="test_size: Float % Range(0.0, 1.0)" help="[default: 0.2]  Fraction of input samples to exclude from training set and use for classifier testing."/>
            <param name="step" type="float" min="1e-06" max="0.999999" value="0.05" label="step: Float % Range(0.0, 1.0, inclusive_start=False)" help="[default: 0.05]  If optimize_feature_selection is True, step is the percentage of features to remove at each iteration."/>
            <param name="cv" type="integer" min="1" value="5" label="cv: Int % Range(1, None)" help="[default: 5]  Number of k-fold cross-validations to perform."/>
            <param name="random_state" type="integer" optional="true" label="random_state: Int" help="[optional]  Seed used by random number generator."/>
            <param name="n_jobs" type="integer" value="1" label="n_jobs: Int" help="[default: 1]  Number of jobs to run in parallel."/>
            <param name="n_estimators" type="integer" min="1" value="100" label="n_estimators: Int % Range(1, None)" help="[default: 100]  Number of trees to grow for estimation. More trees will improve predictive accuracy up to a threshold level, but will also increase time and memory requirements. This parameter only affects ensemble estimators, such as Random Forest, AdaBoost, ExtraTrees, and GradientBoosting."/>
            <param name="estimator" type="select" label="estimator: Str % Choices('RandomForestRegressor', 'ExtraTreesRegressor', 'GradientBoostingRegressor', 'AdaBoostRegressor', 'ElasticNet', 'Ridge', 'Lasso', 'KNeighborsRegressor', 'LinearSVR', 'SVR')">
                <option value="RandomForestRegressor" selected="true">RandomForestRegressor</option>
                <option value="ExtraTreesRegressor">ExtraTreesRegressor</option>
                <option value="GradientBoostingRegressor">GradientBoostingRegressor</option>
                <option value="AdaBoostRegressor">AdaBoostRegressor</option>
                <option value="ElasticNet">ElasticNet</option>
                <option value="Ridge">Ridge</option>
                <option value="Lasso">Lasso</option>
                <option value="KNeighborsRegressor">KNeighborsRegressor</option>
                <option value="LinearSVR">LinearSVR</option>
                <option value="SVR">SVR</option>
            </param>
            <param name="optimize_feature_selection" type="boolean" truevalue="__q2galaxy__::literal::True" falsevalue="__q2galaxy__::literal::False" label="optimize_feature_selection: Bool" help="[default: No]  Automatically optimize input feature selection using recursive feature elimination."/>
            <param name="stratify" type="boolean" truevalue="__q2galaxy__::literal::True" falsevalue="__q2galaxy__::literal::False" label="stratify: Bool" help="[default: No]  Evenly stratify training and test data among metadata categories. If True, all values in column must match at least two samples."/>
            <param name="parameter_tuning" type="boolean" truevalue="__q2galaxy__::literal::True" falsevalue="__q2galaxy__::literal::False" label="parameter_tuning: Bool" help="[default: No]  Automatically tune hyperparameters using random grid search."/>
            <param name="missing_samples" type="select" label="missing_samples: Str % Choices('error', 'ignore')" display="radio">
                <option value="error" selected="true">error</option>
                <option value="ignore">ignore</option>
            </param>
        </section>
    </inputs>
    <outputs>
        <data name="sample_estimator" format="qza" label="${tool.name} on ${on_string}: sample_estimator.qza" from_work_dir="sample_estimator.qza"/>
        <data name="feature_importance" format="qza" label="${tool.name} on ${on_string}: feature_importance.qza" from_work_dir="feature_importance.qza"/>
        <data name="predictions" format="qza" label="${tool.name} on ${on_string}: predictions.qza" from_work_dir="predictions.qza"/>
        <data name="model_summary" format="qzv" label="${tool.name} on ${on_string}: model_summary.qzv" from_work_dir="model_summary.qzv"/>
        <data name="accuracy_results" format="qzv" label="${tool.name} on ${on_string}: accuracy_results.qzv" from_work_dir="accuracy_results.qzv"/>
    </outputs>
    <tests/>
    <help>
QIIME 2: sample-classifier regress-samples
==========================================
Train and test a cross-validated supervised learning regressor.


Outputs:
--------
:sample_estimator.qza: Trained sample estimator.
:feature_importance.qza: Importance of each input feature to model accuracy.
:predictions.qza: Predicted target values for each input sample.
:model_summary.qzv: Summarized parameter and (if enabled) feature selection information for the trained estimator.
:accuracy_results.qzv: Accuracy results visualization.

|  

Description:
------------
Predicts a continuous sample metadata column using a supervised learning regressor. Splits input data into training and test sets. The training set is used to train and test the estimator using a stratified k-fold cross-validation scheme. This includes optional steps for automated feature extraction and hyperparameter optimization. The test set validates classification accuracy of the optimized estimator. Outputs classification results for test set. For more details on the learning algorithm, see http://scikit-learn.org/stable/supervised_learning.html


|  

</help>
    <citations>
        <citation type="doi">10.21105/joss.00934</citation>
        <citation type="bibtex">@article{cite2,
 author = {Pedregosa, Fabian and Varoquaux, Gaël and Gramfort, Alexandre and Michel, Vincent and Thirion, Bertrand and Grisel, Olivier and Blondel, Mathieu and Prettenhofer, Peter and Weiss, Ron and Dubourg, Vincent and Vanderplas, Jake and Passos, Alexandre and Cournapeau, David and Brucher, Matthieu and Perrot, Matthieu and Duchesnay, Édouard},
 journal = {Journal of machine learning research},
 number = {Oct},
 pages = {2825--2830},
 title = {Scikit-learn: Machine learning in Python},
 volume = {12},
 year = {2011}
}
</citation>
        <citation type="doi">10.1038/s41587-019-0209-9</citation>
    </citations>
</tool>
