<?xml version='1.0' encoding='utf-8'?>
<!--
Copyright (c) 2022, QIIME 2 development team.

Distributed under the terms of the Modified BSD License. (SPDX: BSD-3-Clause)
-->
<!--
This tool was automatically generated by:
    q2galaxy (version: 2022.8.1)
for:
    qiime2 (version: 2022.8.1)
-->
<tool name="qiime2 sample-classifier classify-samples-from-dist" id="qiime2__sample_classifier__classify_samples_from_dist" version="2022.8.0+q2galaxy.2022.8.1" profile="20.09" license="BSD-3-Clause">
    <description>Run k-nearest-neighbors on a labeled distance matrix.</description>
    <requirements>
        <container type="docker">quay.io/qiime2/core:2022.8</container>
    </requirements>
    <version_command>q2galaxy version sample_classifier</version_command>
    <command detect_errors="aggressive">q2galaxy run sample_classifier classify_samples_from_dist '$inputs'</command>
    <configfiles>
        <inputs name="inputs" data_style="paths"/>
    </configfiles>
    <inputs>
        <param name="distance_matrix" type="data" format="qza" label="distance_matrix: DistanceMatrix" help="[required]  a distance matrix">
            <options options_filter_attribute="metadata.semantic_type">
                <filter type="add_value" value="DistanceMatrix"/>
            </options>
            <validator type="expression" message="Incompatible type">hasattr(value.metadata, "semantic_type") and value.metadata.semantic_type in ['DistanceMatrix']</validator>
        </param>
        <conditional name="metadata">
            <param name="type" type="select" label="metadata: MetadataColumn[Categorical]" help="[required]  Categorical metadata column to use as prediction target.">
                <option value="tsv" selected="true">Metadata from TSV</option>
                <option value="qza">Metadata from Artifact</option>
            </param>
            <when value="tsv">
                <param name="source" type="data" format="tabular,qiime2.tabular" label="Metadata Source"/>
                <param name="column" type="data_column" label="Column Name" data_ref="source" use_header_names="true">
                    <validator type="expression" message="The first column cannot be selected (they are IDs).">value != "1"</validator>
                </param>
            </when>
            <when value="qza">
                <param name="source" type="data" format="qza" label="Metadata Source"/>
                <param name="column" type="text" label="Column Name">
                    <validator type="empty_field"/>
                </param>
            </when>
        </conditional>
        <section name="__q2galaxy__GUI__section__extra_opts__" title="Click here for additional options">
            <param name="k" type="integer" value="1" label="k: Int" help="[default: 1]  Number of nearest neighbors"/>
            <param name="cv" type="integer" min="1" value="5" label="cv: Int % Range(1, None)" help="[default: 5]  Number of k-fold cross-validations to perform."/>
            <param name="random_state" type="integer" optional="true" label="random_state: Int" help="[optional]  Seed used by random number generator."/>
            <param name="n_jobs" type="integer" value="1" label="n_jobs: Int" help="[default: 1]  Number of jobs to run in parallel."/>
            <param name="palette" type="select" label="palette: Str % Choices('YellowOrangeBrown', 'YellowOrangeRed', 'OrangeRed', 'PurpleRed', 'RedPurple', 'BluePurple', 'GreenBlue', 'PurpleBlue', 'YellowGreen', 'summer', 'copper', 'viridis', 'cividis', 'plasma', 'inferno', 'magma', 'sirocco', 'drifting', 'melancholy', 'enigma', 'eros', 'spectre', 'ambition', 'mysteriousstains', 'daydream', 'solano', 'navarro', 'dandelions', 'deepblue', 'verve', 'greyscale')">
                <option value="YellowOrangeBrown">YellowOrangeBrown</option>
                <option value="YellowOrangeRed">YellowOrangeRed</option>
                <option value="OrangeRed">OrangeRed</option>
                <option value="PurpleRed">PurpleRed</option>
                <option value="RedPurple">RedPurple</option>
                <option value="BluePurple">BluePurple</option>
                <option value="GreenBlue">GreenBlue</option>
                <option value="PurpleBlue">PurpleBlue</option>
                <option value="YellowGreen">YellowGreen</option>
                <option value="summer">summer</option>
                <option value="copper">copper</option>
                <option value="viridis">viridis</option>
                <option value="cividis">cividis</option>
                <option value="plasma">plasma</option>
                <option value="inferno">inferno</option>
                <option value="magma">magma</option>
                <option value="sirocco" selected="true">sirocco</option>
                <option value="drifting">drifting</option>
                <option value="melancholy">melancholy</option>
                <option value="enigma">enigma</option>
                <option value="eros">eros</option>
                <option value="spectre">spectre</option>
                <option value="ambition">ambition</option>
                <option value="mysteriousstains">mysteriousstains</option>
                <option value="daydream">daydream</option>
                <option value="solano">solano</option>
                <option value="navarro">navarro</option>
                <option value="dandelions">dandelions</option>
                <option value="deepblue">deepblue</option>
                <option value="verve">verve</option>
                <option value="greyscale">greyscale</option>
            </param>
        </section>
    </inputs>
    <outputs>
        <data name="predictions" format="qza" label="${tool.id} on ${on_string}: predictions.qza" from_work_dir="predictions.qza"/>
        <data name="accuracy_results" format="qzv" label="${tool.id} on ${on_string}: accuracy_results.qzv" from_work_dir="accuracy_results.qzv"/>
    </outputs>
    <tests/>
    <help>
QIIME 2: sample-classifier classify-samples-from-dist
=====================================================
Run k-nearest-neighbors on a labeled distance matrix.


Outputs:
--------
:predictions.qza: leave one out predictions for each sample
:accuracy_results.qzv: Accuracy results visualization.

|  

Description:
------------
Run k-nearest-neighbors on a labeled distance matrix. Return cross-validated (leave one out) predictions and  accuracy. k = 1 by default


|  

</help>
    <citations>
        <citation type="doi">10.21105/joss.00934</citation>
        <citation type="bibtex">@article{cite2,
 author = {Pedregosa, Fabian and Varoquaux, Gaël and Gramfort, Alexandre and Michel, Vincent and Thirion, Bertrand and Grisel, Olivier and Blondel, Mathieu and Prettenhofer, Peter and Weiss, Ron and Dubourg, Vincent and Vanderplas, Jake and Passos, Alexandre and Cournapeau, David and Brucher, Matthieu and Perrot, Matthieu and Duchesnay, Édouard},
 journal = {Journal of machine learning research},
 number = {Oct},
 pages = {2825--2830},
 title = {Scikit-learn: Machine learning in Python},
 volume = {12},
 year = {2011}
}
</citation>
        <citation type="doi">10.1038/s41587-019-0209-9</citation>
    </citations>
</tool>
