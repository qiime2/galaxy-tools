<?xml version='1.0' encoding='utf-8'?>
<!--
Copyright (c) 2022, QIIME 2 development team.

Distributed under the terms of the Modified BSD License. (SPDX: BSD-3-Clause)
-->
<!--
This tool was automatically generated by:
    q2galaxy (version: 2022.8.1)
for:
    qiime2 (version: 2022.8.1)
-->
<tool name="qiime2 sample-classifier split-table" id="qiime2__sample_classifier__split_table" version="2022.8.0+q2galaxy.2022.8.1.1" profile="22.05" license="BSD-3-Clause">
    <description>Split a feature table into training and testing sets.</description>
    <requirements>
        <container type="docker">quay.io/qiime2/core:2022.8</container>
    </requirements>
    <version_command>q2galaxy version sample_classifier</version_command>
    <command detect_errors="aggressive">q2galaxy run sample_classifier split_table '$inputs'</command>
    <configfiles>
        <inputs name="inputs" data_style="paths"/>
    </configfiles>
    <inputs>
        <param name="table" type="data" format="qza" label="table: FeatureTable[Frequency¹ | RelativeFrequency² | PresenceAbsence³ | Balance⁴ | PercentileNormalized⁵ | Design⁶]" help="[required]  Feature table containing all features that should be used for target prediction.">
            <options options_filter_attribute="metadata.semantic_type">
                <filter type="add_value" value="FeatureTable[PercentileNormalized]"/>
                <filter type="add_value" value="FeatureTable[Balance]"/>
                <filter type="add_value" value="FeatureTable[Frequency]"/>
                <filter type="add_value" value="FeatureTable[RelativeFrequency]"/>
                <filter type="add_value" value="FeatureTable[PresenceAbsence]"/>
                <filter type="add_value" value="FeatureTable[Design]"/>
            </options>
            <validator type="expression" message="Incompatible type">hasattr(value.metadata, "semantic_type") and value.metadata.semantic_type in ['FeatureTable[Balance]', 'FeatureTable[Design]', 'FeatureTable[Frequency]', 'FeatureTable[PercentileNormalized]', 'FeatureTable[PresenceAbsence]', 'FeatureTable[RelativeFrequency]']</validator>
        </param>
        <conditional name="metadata">
            <param name="type" type="select" label="metadata: MetadataColumn[Numeric | Categorical]" help="[required]  Numeric metadata column to use as prediction target.">
                <option value="tsv" selected="true">Metadata from TSV</option>
                <option value="qza">Metadata from Artifact</option>
            </param>
            <when value="tsv">
                <param name="source" type="data" format="tabular,qiime2.tabular" label="Metadata Source"/>
                <param name="column" type="data_column" label="Column Name" data_ref="source" use_header_names="true">
                    <validator type="expression" message="The first column cannot be selected (they are IDs).">value != "1"</validator>
                </param>
            </when>
            <when value="qza">
                <param name="source" type="data" format="qza" label="Metadata Source"/>
                <param name="column" type="text" label="Column Name">
                    <validator type="empty_field"/>
                </param>
            </when>
        </conditional>
        <section name="__q2galaxy__GUI__section__extra_opts__" title="Click here for additional options">
            <param name="test_size" type="float" min="0.0" max="0.999999" value="0.2" label="test_size: Float % Range(0.0, 1.0)" help="[default: 0.2]  Fraction of input samples to exclude from training set and use for classifier testing."/>
            <param name="random_state" type="integer" optional="true" label="random_state: Int" help="[optional]  Seed used by random number generator."/>
            <param name="stratify" type="boolean" truevalue="__q2galaxy__::literal::True" falsevalue="__q2galaxy__::literal::False" checked="true" label="stratify: Bool" help="[default: Yes]  Evenly stratify training and test data among metadata categories. If True, all values in column must match at least two samples."/>
            <param name="missing_samples" type="select" label="missing_samples: Str % Choices('error', 'ignore')" display="radio">
                <option value="error" selected="true">error</option>
                <option value="ignore">ignore</option>
            </param>
        </section>
    </inputs>
    <outputs>
        <data name="training_table" format="qza" label="${tool.id} on ${on_string}: training_table.qza" from_work_dir="training_table.qza"/>
        <data name="test_table" format="qza" label="${tool.id} on ${on_string}: test_table.qza" from_work_dir="test_table.qza"/>
        <data name="training_targets" format="qza" label="${tool.id} on ${on_string}: training_targets.qza" from_work_dir="training_targets.qza"/>
        <data name="test_targets" format="qza" label="${tool.id} on ${on_string}: test_targets.qza" from_work_dir="test_targets.qza"/>
    </outputs>
    <tests/>
    <help>
QIIME 2: sample-classifier split-table
======================================
Split a feature table into training and testing sets.


Outputs:
--------
:training_table.qza: Feature table containing training samples
:test_table.qza: Feature table containing test samples
:training_targets.qza: Series containing true target values of train samples
:test_targets.qza: Series containing true target values of test samples

|  

Description:
------------
Split a feature table into training and testing sets. By default stratifies training and test sets on a metadata column, such that values in that column are evenly represented across training and test sets.


|  

</help>
    <citations>
        <citation type="doi">10.21105/joss.00934</citation>
        <citation type="bibtex">@article{cite2,
 author = {Pedregosa, Fabian and Varoquaux, Gaël and Gramfort, Alexandre and Michel, Vincent and Thirion, Bertrand and Grisel, Olivier and Blondel, Mathieu and Prettenhofer, Peter and Weiss, Ron and Dubourg, Vincent and Vanderplas, Jake and Passos, Alexandre and Cournapeau, David and Brucher, Matthieu and Perrot, Matthieu and Duchesnay, Édouard},
 journal = {Journal of machine learning research},
 number = {Oct},
 pages = {2825--2830},
 title = {Scikit-learn: Machine learning in Python},
 volume = {12},
 year = {2011}
}
</citation>
        <citation type="doi">10.1038/s41587-019-0209-9</citation>
    </citations>
</tool>
