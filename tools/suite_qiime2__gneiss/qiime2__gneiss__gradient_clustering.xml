<?xml version='1.0' encoding='utf-8'?>
<!--
Copyright (c) 2022, QIIME 2 development team.

Distributed under the terms of the Modified BSD License. (SPDX: BSD-3-Clause)
-->
<!--
This tool was automatically generated by:
    q2galaxy (version: 2022.8.1)
for:
    qiime2 (version: 2022.8.1)
-->
<tool name="qiime2 gneiss gradient-clustering" id="qiime2__gneiss__gradient_clustering" version="2022.8.0+q2galaxy.2022.8.1" profile="20.09" license="BSD-3-Clause">
    <description>Hierarchical clustering using gradient information.</description>
    <requirements>
        <container type="docker">quay.io/qiime2/core:2022.8</container>
    </requirements>
    <version_command>q2galaxy version gneiss</version_command>
    <command detect_errors="aggressive">q2galaxy run gneiss gradient_clustering '$inputs'</command>
    <configfiles>
        <inputs name="inputs" data_style="paths"/>
    </configfiles>
    <inputs>
        <param name="table" type="data" format="qza" label="table: FeatureTable[Frequency | RelativeFrequency | Composition]" help="[required]  The feature table containing the samples in which the columns will be clustered.">
            <options options_filter_attribute="metadata.semantic_type">
                <filter type="add_value" value="FeatureTable[Composition]"/>
                <filter type="add_value" value="FeatureTable[Frequency]"/>
                <filter type="add_value" value="FeatureTable[RelativeFrequency]"/>
            </options>
            <validator type="expression" message="Incompatible type">hasattr(value.metadata, "semantic_type") and value.metadata.semantic_type in ['FeatureTable[Composition]', 'FeatureTable[Frequency]', 'FeatureTable[RelativeFrequency]']</validator>
        </param>
        <conditional name="gradient">
            <param name="type" type="select" label="gradient: MetadataColumn[Numeric]" help="[required]  Contains gradient values to sort the features and samples.">
                <option value="tsv" selected="true">Metadata from TSV</option>
                <option value="qza">Metadata from Artifact</option>
            </param>
            <when value="tsv">
                <param name="source" type="data" format="tabular,qiime2.tabular" label="Metadata Source"/>
                <param name="column" type="data_column" label="Column Name" data_ref="source" use_header_names="true">
                    <validator type="expression" message="The first column cannot be selected (they are IDs).">value != "1"</validator>
                </param>
            </when>
            <when value="qza">
                <param name="source" type="data" format="qza" label="Metadata Source"/>
                <param name="column" type="text" label="Column Name">
                    <validator type="empty_field"/>
                </param>
            </when>
        </conditional>
        <section name="__q2galaxy__GUI__section__extra_opts__" title="Click here for additional options">
            <param name="ignore_missing_samples" type="boolean" truevalue="__q2galaxy__::literal::True" falsevalue="__q2galaxy__::literal::False" label="ignore_missing_samples: Bool" help="[default: No]"/>
            <param name="weighted" type="boolean" truevalue="__q2galaxy__::literal::True" falsevalue="__q2galaxy__::literal::False" checked="true" label="weighted: Bool" help="[default: Yes]  Specifies if abundance or presence/absence information should be used to perform the clustering."/>
        </section>
    </inputs>
    <outputs>
        <data name="clustering" format="qza" label="${tool.id} on ${on_string}: clustering.qza" from_work_dir="clustering.qza"/>
    </outputs>
    <tests/>
    <help>
QIIME 2: gneiss gradient-clustering
===================================
Hierarchical clustering using gradient information.


Outputs:
--------
:clustering.qza: A hierarchy of feature identifiers where each tip corresponds to the feature identifiers in the table. This tree can contain tip ids that are not present in the table, but all feature ids in the table must be present in this tree.

|  

Description:
------------
Build a bifurcating tree that represents a hierarchical clustering of features.  The hiearchical clustering uses Ward hierarchical clustering based on the mean difference of gradients that each feature is observed in. This method is primarily used to sort the table to reveal the underlying block-like structures.


|  

</help>
    <citations>
        <citation type="bibtex">@article{cite1,
 author = {Morton, James T and Sanders, Jon and Quinn, Robert A and McDonald, Daniel and Gonzalez, Antonio and VÃ¡zquez-Baeza, Yoshiki and Navas-Molina, Jose A and Song, Se Jin and Metcalf, Jessica L and Hyde, Embriette R and Lladser, Manuel and Dorrestein, Pieter C and Knight, Rob},
 journal = {MSystems},
 number = {1},
 pages = {e00162--16},
 publisher = {Am Soc Microbiol},
 title = {Balance trees reveal microbial niche differentiation},
 volume = {2},
 year = {2017}
}
</citation>
        <citation type="doi">10.1038/s41587-019-0209-9</citation>
    </citations>
</tool>
