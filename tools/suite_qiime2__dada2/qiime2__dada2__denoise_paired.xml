<?xml version='1.0' encoding='utf-8'?>
<!--
Copyright (c) 2024, QIIME 2 development team.

Distributed under the terms of the Modified BSD License. (SPDX: BSD-3-Clause)
-->
<!--
This tool was automatically generated by:
    q2galaxy (version: 2024.10.0)
for:
    qiime2 (version: 2024.10.1)
-->
<tool name="qiime2 dada2 denoise-paired" id="qiime2__dada2__denoise_paired" version="2024.10.0+q2galaxy.2024.10.0" profile="22.05" license="BSD-3-Clause">
    <description>Denoise and dereplicate paired-end sequences</description>
    <xrefs>
        <xref type="bio.tools">qiime2</xref>
    </xrefs>
    <requirements>
        <container type="docker">quay.io/qiime2/amplicon:2024.10</container>
    </requirements>
    <version_command>q2galaxy version dada2</version_command>
    <command detect_errors="exit_code">q2galaxy run dada2 denoise_paired '$inputs'</command>
    <configfiles>
        <inputs name="inputs" data_style="staging_path_and_source_path"/>
    </configfiles>
    <inputs>
        <param name="demultiplexed_seqs" type="data" format="qza" label="demultiplexed_seqs: SampleData[PairedEndSequencesWithQuality]" help="[required]  The paired-end demultiplexed sequences to be denoised.">
            <options options_filter_attribute="metadata.semantic_type">
                <filter type="add_value" value="SampleData[PairedEndSequencesWithQuality]"/>
            </options>
            <validator type="expression" message="Incompatible type">hasattr(value.metadata, "semantic_type") and value.metadata.semantic_type in ['SampleData[PairedEndSequencesWithQuality]']</validator>
        </param>
        <param name="trunc_len_f" type="integer" value="" label="trunc_len_f: Int" help="[required]  Position at which forward read sequences should be truncated due to decrease in quality. This truncates the 3' end of the of the input sequences, which will be the bases that were sequenced in the last cycles. Reads that are shorter than this value will be discarded. After this parameter is applied there must still be at least a 12 nucleotide overlap between the forward and reverse reads. If 0 is provided, no truncation or length filtering will be performed"/>
        <param name="trunc_len_r" type="integer" value="" label="trunc_len_r: Int" help="[required]  Position at which reverse read sequences should be truncated due to decrease in quality. This truncates the 3' end of the of the input sequences, which will be the bases that were sequenced in the last cycles. Reads that are shorter than this value will be discarded. After this parameter is applied there must still be at least a 12 nucleotide overlap between the forward and reverse reads. If 0 is provided, no truncation or length filtering will be performed"/>
        <section name="__q2galaxy__GUI__section__extra_opts__" title="Click here for additional options">
            <param name="trim_left_f" type="integer" value="0" label="trim_left_f: Int" help="[default: 0]  Position at which forward read sequences should be trimmed due to low quality. This trims the 5' end of the input sequences, which will be the bases that were sequenced in the first cycles."/>
            <param name="trim_left_r" type="integer" value="0" label="trim_left_r: Int" help="[default: 0]  Position at which reverse read sequences should be trimmed due to low quality. This trims the 5' end of the input sequences, which will be the bases that were sequenced in the first cycles."/>
            <param name="max_ee_f" type="float" value="2.0" label="max_ee_f: Float" help="[default: 2.0]  Forward reads with number of expected errors higher than this value will be discarded."/>
            <param name="max_ee_r" type="float" value="2.0" label="max_ee_r: Float" help="[default: 2.0]  Reverse reads with number of expected errors higher than this value will be discarded."/>
            <param name="trunc_q" type="integer" value="2" label="trunc_q: Int" help="[default: 2]  Reads are truncated at the first instance of a quality score less than or equal to this value. If the resulting read is then shorter than `trunc_len_f` or `trunc_len_r` (depending on the direction of the read) it is discarded."/>
            <param name="min_overlap" type="integer" min="4" value="12" label="min_overlap: Int % Range(4, None)" help="[default: 12]  The minimum length of the overlap required for merging the forward and reverse reads."/>
            <param name="pooling_method" type="select" label="pooling_method: Str % Choices('independent', 'pseudo')" display="radio">
                <option value="independent" selected="true">independent</option>
                <option value="pseudo">pseudo</option>
            </param>
            <param name="chimera_method" type="select" label="chimera_method: Str % Choices('consensus', 'none', 'pooled')" display="radio">
                <option value="consensus" selected="true">consensus</option>
                <option value="none">none</option>
                <option value="pooled">pooled</option>
            </param>
            <param name="min_fold_parent_over_abundance" type="float" value="1.0" label="min_fold_parent_over_abundance: Float" help="[default: 1.0]  The minimum abundance of potential parents of a sequence being tested as chimeric, expressed as a fold-change versus the abundance of the sequence being tested. Values should be greater than or equal to 1 (i.e. parents should be more abundant than the sequence being tested). This parameter has no effect if chimera_method is &quot;none&quot;."/>
            <param name="allow_one_off" type="boolean" truevalue="__q2galaxy__::literal::True" falsevalue="__q2galaxy__::literal::False" label="allow_one_off: Bool" help="[default: No]  Bimeras that are one-off from exact are also identified if the `allow_one_off` argument is TrueIf True, a sequence will be identified as bimera if it is one mismatch or indel away from an exact bimera."/>
            <param name="n_reads_learn" type="integer" value="1000000" label="n_reads_learn: Int" help="[default: 1000000]  The number of reads to use when training the error model. Smaller numbers will result in a shorter run time but a less reliable error model."/>
            <param name="hashed_feature_ids" type="boolean" truevalue="__q2galaxy__::literal::True" falsevalue="__q2galaxy__::literal::False" checked="true" label="hashed_feature_ids: Bool" help="[default: Yes]  If true, the feature ids in the resulting table will be presented as hashes of the sequences defining each feature. The hash will always be the same for the same sequence so this allows feature tables to be merged across runs of this method. You should only merge tables if the exact same parameters are used for each run."/>
            <param name="retain_all_samples" type="boolean" truevalue="__q2galaxy__::literal::True" falsevalue="__q2galaxy__::literal::False" checked="true" label="retain_all_samples: Bool" help="[default: Yes]  If True all samples input to dada2 will be retained in the output of dada2, if false samples with zero total frequency are removed from the table."/>
        </section>
    </inputs>
    <outputs>
        <data name="table" format="qza" label="${tool.name} on ${on_string}: table.qza" from_work_dir="table.qza"/>
        <data name="representative_sequences" format="qza" label="${tool.name} on ${on_string}: representative_sequences.qza" from_work_dir="representative_sequences.qza"/>
        <data name="denoising_stats" format="qza" label="${tool.name} on ${on_string}: denoising_stats.qza" from_work_dir="denoising_stats.qza"/>
    </outputs>
    <tests>
        <test>
            <param name="demultiplexed_seqs" value="denoise_paired.test0.demux-paired.qza" ftype="qza"/>
            <param name="trunc_len_f" value="150"/>
            <param name="trunc_len_r" value="140"/>
            <output name="representative_sequences" ftype="qza">
                <assert_contents>
                    <has_archive_member path="[0-9a-f]{8}-[0-9a-f]{4}-[4][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}\/metadata.yaml">
                        <has_line_matching expression="type: FeatureData\[Sequence\]"/>
                    </has_archive_member>
                </assert_contents>
            </output>
            <output name="table" ftype="qza">
                <assert_contents>
                    <has_archive_member path="[0-9a-f]{8}-[0-9a-f]{4}-[4][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}\/metadata.yaml">
                        <has_line_matching expression="type: FeatureTable\[Frequency\]"/>
                    </has_archive_member>
                </assert_contents>
            </output>
            <output name="denoising_stats" ftype="qza">
                <assert_contents>
                    <has_archive_member path="[0-9a-f]{8}-[0-9a-f]{4}-[4][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}\/metadata.yaml">
                        <has_line_matching expression="type: SampleData\[DADA2Stats\]"/>
                    </has_archive_member>
                </assert_contents>
            </output>
        </test>
    </tests>
    <help>
QIIME 2: dada2 denoise-paired
=============================
Denoise and dereplicate paired-end sequences


Outputs:
--------
:table.qza: The resulting feature table.
:representative_sequences.qza: The resulting feature sequences. Each feature in the feature table will be represented by exactly one sequence, and these sequences will be the joined paired-end sequences.
:denoising_stats.qza: &lt;no description&gt;

|  

Description:
------------
This method denoises paired-end sequences, dereplicates them, and filters chimeras.

Examples:
---------

denoise_paired
**************
Using the ``qiime2 dada2 denoise-paired`` tool:
 #. Set *"demultiplexed_seqs"* to ``#: demux-paired.qza``
 #. Set *"trunc_len_f"* to ``150``
 #. Set *"trunc_len_r"* to ``140``
 #. Press the ``Execute`` button.



|  

</help>
    <citations>
        <citation type="doi">10.1038/nmeth.3869</citation>
        <citation type="doi">10.1038/s41587-019-0209-9</citation>
    </citations>
</tool>
