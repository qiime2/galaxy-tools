<?xml version='1.0' encoding='utf-8'?>
<!--
Copyright (c) 2023, QIIME 2 development team.

Distributed under the terms of the Modified BSD License. (SPDX: BSD-3-Clause)
-->
<!--
This tool was automatically generated by:
    q2galaxy (version: 2022.11.1)
for:
    qiime2 (version: 2022.11.1)
-->
<tool name="qiime2 cutadapt demux-single" id="qiime2__cutadapt__demux_single" version="2022.11.1+q2galaxy.2022.11.1.2" profile="22.05" license="BSD-3-Clause">
    <description>Demultiplex single-end sequence data with barcodes in-sequence.</description>
    <requirements>
        <container type="docker">quay.io/qiime2/core:2022.11</container>
    </requirements>
    <version_command>q2galaxy version cutadapt</version_command>
    <command detect_errors="exit_code">q2galaxy run cutadapt demux_single '$inputs'</command>
    <configfiles>
        <inputs name="inputs" data_style="paths"/>
    </configfiles>
    <inputs>
        <param name="seqs" type="data" format="qza" label="seqs: MultiplexedSingleEndBarcodeInSequence" help="[required]  The single-end sequences to be demultiplexed.">
            <options options_filter_attribute="metadata.semantic_type">
                <filter type="add_value" value="MultiplexedSingleEndBarcodeInSequence"/>
            </options>
            <validator type="expression" message="Incompatible type">hasattr(value.metadata, "semantic_type") and value.metadata.semantic_type in ['MultiplexedSingleEndBarcodeInSequence']</validator>
        </param>
        <conditional name="barcodes">
            <param name="type" type="select" label="barcodes: MetadataColumn[Categorical]" help="[required]  The sample metadata column listing the per-sample barcodes.">
                <option value="tsv" selected="true">Metadata from TSV</option>
                <option value="qza">Metadata from Artifact</option>
            </param>
            <when value="tsv">
                <param name="source" type="data" format="tabular,qiime2.tabular" label="Metadata Source"/>
                <param name="column" type="data_column" label="Column Name" data_ref="source" use_header_names="true">
                    <validator type="expression" message="The first column cannot be selected (they are IDs).">value != "1"</validator>
                </param>
            </when>
            <when value="qza">
                <param name="source" type="data" format="qza" label="Metadata Source"/>
                <param name="column" type="text" label="Column Name">
                    <validator type="empty_field"/>
                </param>
            </when>
        </conditional>
        <section name="__q2galaxy__GUI__section__extra_opts__" title="Click here for additional options">
            <param name="error_rate" type="float" min="0" max="1" value="0.1" label="error_rate: Float % Range(0, 1, inclusive_end=True)" help="[default: 0.1]  The level of error tolerance, specified as the maximum allowable error rate. The default value specified by cutadapt is 0.1 (=10%), which is greater than `demux emp-*`, which is 0.0 (=0%)."/>
            <param name="batch_size" type="integer" min="0" value="0" label="batch_size: Int % Range(0, None)" help="[default: 0]  The number of samples cutadapt demultiplexes concurrently. Demultiplexing in smaller batches will yield the same result with marginal speed loss, and may solve &quot;too many files&quot; errors related to sample quantity. Set to &quot;0&quot; to process all samples at once."/>
            <param name="minimum_length" type="integer" min="1" value="1" label="minimum_length: Int % Range(1, None)" help="[default: 1]  Discard reads shorter than specified value. Note, the cutadapt default of 0 has been overridden, because that value produces empty sequence records."/>
            <param name="cores" type="integer" min="1" value="1" label="cores: Int % Range(1, None)" help="[default: 1]  Number of CPU cores to use."/>
        </section>
    </inputs>
    <outputs>
        <data name="per_sample_sequences" format="qza" label="${tool.name} on ${on_string}: per_sample_sequences.qza" from_work_dir="per_sample_sequences.qza"/>
        <data name="untrimmed_sequences" format="qza" label="${tool.name} on ${on_string}: untrimmed_sequences.qza" from_work_dir="untrimmed_sequences.qza"/>
    </outputs>
    <tests>
        <test>
            <param name="seqs" value="demux_single.test0.seqs.qza" ftype="qza"/>
            <conditional name="barcodes">
                <param name="type" value="tsv"/>
                <param name="source" value="demux_single.test0.md.tsv" ftype="qiime2.tabular"/>
                <param name="column" value="2"/>
            </conditional>
            <output name="per_sample_sequences" ftype="qza">
                <assert_contents>
                    <has_archive_member path="[0-9a-f]{8}-[0-9a-f]{4}-[4][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}\/metadata.yaml">
                        <has_line_matching expression="type: SampleData\[SequencesWithQuality\]"/>
                    </has_archive_member>
                </assert_contents>
            </output>
            <output name="untrimmed_sequences" ftype="qza">
                <assert_contents>
                    <has_archive_member path="[0-9a-f]{8}-[0-9a-f]{4}-[4][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}\/metadata.yaml">
                        <has_line_matching expression="type: MultiplexedSingleEndBarcodeInSequence"/>
                    </has_archive_member>
                </assert_contents>
            </output>
        </test>
    </tests>
    <help>
QIIME 2: cutadapt demux-single
==============================
Demultiplex single-end sequence data with barcodes in-sequence.


Outputs:
--------
:per_sample_sequences.qza: The resulting demultiplexed sequences.
:untrimmed_sequences.qza: The sequences that were unmatched to barcodes.

|  

Description:
------------
Demultiplex sequence data (i.e., map barcode reads to sample ids). Barcodes are expected to be located within the sequence data (versus the header, or a separate barcode file).

Examples:
---------

demux_single
************
Using the ``qiime2 cutadapt demux-single`` tool:
 #. Set *"seqs"* to ``#: seqs.qza``
 #. For *"barcodes"*:

    #. Leave as ``Metadata from TSV``
    #. Set *"Metadata Source"* to ``md.tsv``
    #. Set *"Column Name"* to ``BarcodeSequence``

 #. Press the ``Execute`` button.



|  

</help>
    <citations>
        <citation type="doi">10.14806/ej.17.1.200</citation>
        <citation type="doi">10.1038/s41587-019-0209-9</citation>
    </citations>
</tool>
