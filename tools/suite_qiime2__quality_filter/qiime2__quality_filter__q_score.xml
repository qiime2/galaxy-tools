<?xml version='1.0' encoding='utf-8'?>
<!--
Copyright (c) 2022, QIIME 2 development team.

Distributed under the terms of the Modified BSD License. (SPDX: BSD-3-Clause)
-->
<!--
This tool was automatically generated by:
    q2galaxy (version: 2022.8.1)
for:
    qiime2 (version: 2022.8.1)
-->
<tool name="qiime2 quality-filter q-score" id="qiime2__quality_filter__q_score" version="2022.8.0+q2galaxy.2022.8.1" profile="20.09" license="BSD-3-Clause">
    <description>Quality filter based on sequence quality scores.</description>
    <requirements>
        <container type="docker">quay.io/qiime2/core:2022.8</container>
    </requirements>
    <version_command>q2galaxy version quality_filter</version_command>
    <command detect_errors="aggressive">q2galaxy run quality_filter q_score '$inputs'</command>
    <configfiles>
        <inputs name="inputs" data_style="paths"/>
    </configfiles>
    <inputs>
        <param name="demux" type="data" format="qza" label="demux: SampleData[SequencesWithQuality | PairedEndSequencesWithQuality]¹ | SampleData[JoinedSequencesWithQuality]²" help="[required]  The demultiplexed sequence data to be quality filtered.">
            <options options_filter_attribute="metadata.semantic_type">
                <filter type="add_value" value="SampleData[SequencesWithQuality | PairedEndSequencesWithQuality]"/>
                <filter type="add_value" value="SampleData[JoinedSequencesWithQuality]"/>
            </options>
            <validator type="expression" message="Incompatible type">hasattr(value.metadata, "semantic_type") and value.metadata.semantic_type in ['SampleData[JoinedSequencesWithQuality]', 'SampleData[SequencesWithQuality | PairedEndSequencesWithQuality]']</validator>
        </param>
        <section name="__q2galaxy__GUI__section__extra_opts__" title="Click here for additional options">
            <param name="min_quality" type="integer" value="4" label="min_quality: Int" help="[default: 4]  The minimum acceptable PHRED score. All PHRED scores less that this value are considered to be low PHRED scores."/>
            <param name="quality_window" type="integer" value="3" label="quality_window: Int" help="[default: 3]  The maximum number of low PHRED scores that can be observed in direct succession before truncating a sequence read."/>
            <param name="min_length_fraction" type="float" value="0.75" label="min_length_fraction: Float" help="[default: 0.75]  The minimum length that a sequence read can be following truncation and still be retained. This length should be provided as a fraction of the input sequence length."/>
            <param name="max_ambiguous" type="integer" value="0" label="max_ambiguous: Int" help="[default: 0]  The maximum number of ambiguous (i.e., N) base calls. This is applied after trimming sequences based on `min_length_fraction`."/>
        </section>
    </inputs>
    <outputs>
        <data name="filtered_sequences" format="qza" label="${tool.id} on ${on_string}: filtered_sequences.qza" from_work_dir="filtered_sequences.qza"/>
        <data name="filter_stats" format="qza" label="${tool.id} on ${on_string}: filter_stats.qza" from_work_dir="filter_stats.qza"/>
    </outputs>
    <tests/>
    <help>
QIIME 2: quality-filter q-score
===============================
Quality filter based on sequence quality scores.


Outputs:
--------
:filtered_sequences.qza: The resulting quality-filtered sequences.
:filter_stats.qza: Summary statistics of the filtering process.

|  

Description:
------------
This method filters sequence based on quality scores and the presence of ambiguous base calls.


|  

</help>
    <citations>
        <citation type="doi">10.1038/nmeth.2276</citation>
        <citation type="doi">10.1038/s41587-019-0209-9</citation>
    </citations>
</tool>
