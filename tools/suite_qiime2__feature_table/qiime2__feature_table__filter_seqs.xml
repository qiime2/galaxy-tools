<?xml version='1.0' encoding='utf-8'?>
<!--
Copyright (c) 2023, QIIME 2 development team.

Distributed under the terms of the Modified BSD License. (SPDX: BSD-3-Clause)
-->
<!--
This tool was automatically generated by:
    q2galaxy (version: 2023.5.0)
for:
    qiime2 (version: 2023.5.1)
-->
<tool name="qiime2 feature-table filter-seqs" id="qiime2__feature_table__filter_seqs" version="2023.5.0+q2galaxy.2023.5.0.2" profile="22.05" license="BSD-3-Clause">
    <description>Filter features from sequences</description>
    <requirements>
        <container type="docker">quay.io/qiime2/core:2023.5</container>
    </requirements>
    <version_command>q2galaxy version feature_table</version_command>
    <command detect_errors="exit_code">q2galaxy run feature_table filter_seqs '$inputs'</command>
    <configfiles>
        <inputs name="inputs" data_style="paths"/>
    </configfiles>
    <inputs>
        <param name="data" type="data" format="qza" label="data: FeatureData[Sequence¹ | AlignedSequence²]" help="[required]  The sequences from which features should be filtered.">
            <options options_filter_attribute="metadata.semantic_type">
                <filter type="add_value" value="FeatureData[Sequence]"/>
                <filter type="add_value" value="FeatureData[AlignedSequence]"/>
            </options>
            <validator type="expression" message="Incompatible type">hasattr(value.metadata, "semantic_type") and value.metadata.semantic_type in ['FeatureData[AlignedSequence]', 'FeatureData[Sequence]']</validator>
        </param>
        <section name="__q2galaxy__GUI__section__extra_opts__" title="Click here for additional options">
            <param name="table" type="data" format="qza" optional="true" label="table: FeatureTable[Frequency]" help="[optional]  Table containing feature ids used for id-based filtering.">
                <options options_filter_attribute="metadata.semantic_type">
                    <filter type="add_value" value="FeatureTable[Frequency]"/>
                </options>
                <validator type="expression" message="Incompatible type">hasattr(value.metadata, "semantic_type") and value.metadata.semantic_type in ['FeatureTable[Frequency]']</validator>
            </param>
            <repeat name="metadata" help="[optional]  Feature metadata used for id-based filtering, with `where` parameter when selecting features to retain, or with `exclude_ids` when selecting features to discard." title="metadata: Metadata">
                <conditional name="__q2galaxy__GUI__conditional__metadata__">
                    <param name="type" type="select" label="metadata: Metadata">
                        <option value="tsv" selected="true">Metadata from TSV</option>
                        <option value="qza">Metadata from Artifact</option>
                    </param>
                    <when value="tsv">
                        <param name="source" type="data" format="tabular,qiime2.tabular" label="Metadata Source"/>
                    </when>
                    <when value="qza">
                        <param name="source" type="data" format="qza" label="Metadata Source"/>
                    </when>
                </conditional>
            </repeat>
            <conditional name="__q2galaxy__GUI__conditional__where__" label="where: Str">
                <param name="__q2galaxy__GUI__select__" type="select" label="where: Str" help="[optional]  SQLite WHERE clause specifying feature metadata criteria that must be met to be included in the filtered feature table. If not provided, all features in `metadata` that are also in the sequences will be retained.">
                    <option value="__q2galaxy__::control::default" selected="true">None (Use default behavior)</option>
                    <option value="__q2galaxy__::control::provide">Provide a value</option>
                </param>
                <when value="__q2galaxy__::control::default">
                    <param name="where" type="hidden" value="__q2galaxy__::literal::None"/>
                </when>
                <when value="__q2galaxy__::control::provide">
                    <param name="where" type="text">
                        <sanitizer>
                            <valid initial="string.printable"/>
                        </sanitizer>
                    </param>
                </when>
            </conditional>
            <param name="exclude_ids" type="boolean" truevalue="__q2galaxy__::literal::True" falsevalue="__q2galaxy__::literal::False" label="exclude_ids: Bool" help="[default: No]  If true, the features selected by the `metadata` (with or without the `where` parameter) or `table` parameter will be excluded from the filtered sequences instead of being retained."/>
        </section>
    </inputs>
    <outputs>
        <data name="filtered_data" format="qza" label="${tool.name} on ${on_string}: filtered_data.qza" from_work_dir="filtered_data.qza"/>
    </outputs>
    <tests/>
    <help>
QIIME 2: feature-table filter-seqs
==================================
Filter features from sequences


Outputs:
--------
:filtered_data.qza: The resulting filtered sequences.

|  

Description:
------------
Filter features from sequences based on a feature table or metadata. See the filtering tutorial on https://docs.qiime2.org for additional details. This method can filter based on ids in a table or a metadata file, but not both (i.e., the table and metadata options are mutually exclusive).


|  

</help>
    <citations>
        <citation type="doi">10.1038/s41587-019-0209-9</citation>
    </citations>
</tool>
